2025-05-06 10:59:48 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:48 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - Starting AuthControllerTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:48 [Test worker] [NONE] DEBUG c.a.a.controller.AuthControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:48 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - The following 1 profile is active: "dev"
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=com.attendly.service.UserService#0 bean#7
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#8
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#9
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#10
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.AuthController:
	{POST [/auth/login]}: login(LoginRequest)
	{POST [/auth/refresh]}: refreshToken(TokenRefreshRequest)
	{POST [/auth/signup]}: signup(SignupRequest)
	{GET [/auth/me]}: getCurrentUser(UserDetailsAdapter)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 10:59:49 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - Started AuthControllerTest in 0.41 seconds (process running for 5.566)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SignupResponse name=child of com.attendly.service.UserService#0 bean#7#11
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering SignupResponse(userId=1, name=홍길동, email=test@example.com, role=LEADER) on UserService(com.attendly.service.UserService#0 bean#7).signup(SignupRequest(email=test@example.com, password=password123, name=홍길동, role=LEADER, departmentId=1))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] ERROR c.a.exception.GlobalExceptionHandler - MethodArgumentNotValidException: {}
org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.attendly.api.dto.SignupResponse> com.attendly.api.controller.AuthController.signup(com.attendly.api.dto.SignupRequest) with 3 errors: [Field error in object 'signupRequest' on field 'name': rejected value []; codes [NotBlank.signupRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.name,name]; arguments []; default message [name]]; default message [이름은 필수입니다]] [Field error in object 'signupRequest' on field 'password': rejected value []; codes [NotBlank.signupRequest.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.password,password]; arguments []; default message [password]]; default message [비밀번호는 필수입니다]] [Field error in object 'signupRequest' on field 'email': rejected value []; codes [NotBlank.signupRequest.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email]]; default message [이메일은 필수입니다]] 
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:159)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.kt:27)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.attendly.api.controller.AuthControllerTest.회원가입 유효성 검증 실패 테스트(AuthControllerTest.kt:106)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#12
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #12#13
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#14
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #14#15
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#16
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #16#17
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of authenticationManager bean#8#18
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#16) on AuthenticationManager(authenticationManager bean#8).authenticate(UsernamePasswordAuthenticationToken [Principal=test@example.com, Credentials=[PROTECTED], Authenticated=false, Details=null, Granted Authorities=[]])
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#14) on Authentication(#16).getPrincipal()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#12) on UserDetailsAdapter(#14).getUser()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering access-token on JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9).generateToken(UserDetailsAdapter(#14))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering refresh-token on JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9).generateRefreshToken(UserDetailsAdapter(#14))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#12).getId()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 홍길동 on User(#12).getName()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#12).getRole()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['accessToken']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['refreshToken']
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#10)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:49 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#19
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#20
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#21
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #20#22
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #19#23
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='리더', role=LEADER) on UserService(#20).getCurrentUser(Authentication(#21))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=null), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=null)]) on GbsMemberService(#19).getGbsMembers(1, 2025-05-06, User(id=1, name='리더', role=LEADER))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#24
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#25
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#26
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #25#27
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #24#28
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='어드민', role=ADMIN) on UserService(#25).getCurrentUser(Authentication(#26))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=null)]) on GbsMemberService(#24).getGbsMembers(1, 2025-05-06, User(id=1, name='어드민', role=ADMIN))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#29
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#30
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#31
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #30#32
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsResponse name=child of #29#33
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserService(#30).getCurrentUser(Authentication(#31))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsResponse(gbsId=1, gbsName=Test GBS, villageId=1, villageName=Test Village, leaderId=1, leaderName=홍길동, startDate=2025-05-06) on GbsMemberService(#29).getGbsForLeader(1)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#34
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#35
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#36
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #35#37
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #34#38
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='위임받은리더', role=LEADER) on UserService(#35).getCurrentUser(Authentication(#36))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=3, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=null), GbsMemberResponse(id=4, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=null)]) on GbsMemberService(#34).getGbsMembers(1, 2025-05-06, User(id=1, name='위임받은리더', role=LEADER))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#39
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#40
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#41
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #40#42
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsHistoryListResponse name=child of #39#43
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserService(#40).getCurrentUser(Authentication(#41))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsHistoryListResponse(leaderId=1, leaderName=홍길동, historyCount=2, histories=[LeaderGbsHistoryResponse(historyId=2, gbsId=2, gbsName=GBS2, villageId=1, villageName=1마을, startDate=2023-01-01, endDate=null, isActive=true, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2022-01-01, phoneNumber=null), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2022-01-01, phoneNumber=null)]), LeaderGbsHistoryResponse(historyId=1, gbsId=1, gbsName=GBS1, villageId=1, villageName=1마을, startDate=2022-01-01, endDate=2022-12-31, isActive=false, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2022-01-01, phoneNumber=null), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2022-01-01, phoneNumber=null)])]) on GbsMemberService(#39).getLeaderGbsHistories(1, User(id=1, name='홍길동', role=LEADER))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#44
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#45
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#46
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #45#47
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsHistoryListResponse name=child of #44#48
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=99, name='관리자', role=ADMIN) on UserService(#45).getCurrentUser(Authentication(#46))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsHistoryListResponse(leaderId=1, leaderName=홍길동, historyCount=1, histories=[LeaderGbsHistoryResponse(historyId=1, gbsId=1, gbsName=GBS1, villageId=1, villageName=1마을, startDate=2022-01-01, endDate=2022-12-31, isActive=false, members=[])]) on GbsMemberService(#44).getLeaderGbsHistories(1, User(id=99, name='관리자', role=ADMIN))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#49
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#50
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of leaderDelegationService#49#51
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(#50) on LeaderDelegationService(leaderDelegationService#49).createDelegation(DelegationCreateRequest(delegatorId=1, delegateId=2, gbsGroupId=1, startDate=2025-05-07, endDate=2025-05-13))
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#50).getId()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #50#52
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #50#52) on LeaderDelegation(#50).getDelegator()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on User(child of #50#52).getId()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #50#52) on LeaderDelegation(#50).getDelegator()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on User(child of #50#52).getName()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #50#53
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #50#53) on LeaderDelegation(#50).getDelegatee()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on User(child of #50#53).getId()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #50#53) on LeaderDelegation(#50).getDelegatee()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on User(child of #50#53).getName()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #50#54
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(child of #50#54) on LeaderDelegation(#50).getGbsGroup()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on GbsGroup(child of #50#54).getId()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(child of #50#54) on LeaderDelegation(#50).getGbsGroup()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on GbsGroup(child of #50#54).getName()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #50#55
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LocalDate(child of #50#55) on LeaderDelegation(#50).getStartDate()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #50#56
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LocalDate(child of #50#56) on LeaderDelegation(#50).getEndDate()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#55).getYear()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#55).getMonthValue()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#55).getDayOfMonth()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#56).getYear()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#56).getMonthValue()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #50#56).getDayOfMonth()
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#57
2025-05-06 10:59:49 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#57#58
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationService(leaderDelegationService#57).findActiveDelegations(1, 2025-05-06)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#59
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#60
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#61
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=#62
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#63
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #63#64
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #63#65
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #63#66
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #63#67
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #63#68
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#59#69
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(#63)] on LeaderDelegationService(leaderDelegationService#59).findActiveDelegations(2, 2025-05-06)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#63).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#60) on LeaderDelegation(#63).getDelegator()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#60).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#60) on LeaderDelegation(#63).getDelegator()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 김위임자 on User(#60).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#61) on LeaderDelegation(#63).getDelegatee()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on User(#61).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#61) on LeaderDelegation(#63).getDelegatee()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 이수임자 on User(#61).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#62) on LeaderDelegation(#63).getGbsGroup()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on GbsGroup(#62).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#62) on LeaderDelegation(#63).getGbsGroup()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 소그룹 on GbsGroup(#62).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-05 on LeaderDelegation(#63).getStartDate()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-11 on LeaderDelegation(#63).getEndDate()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['id']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorName']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#70
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#71
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#72
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=#73
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#74
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #74#75
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #74#76
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #74#77
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #74#78
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #74#79
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#70#80
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(#74)] on LeaderDelegationService(leaderDelegationService#70).findActiveDelegations(2, 2025-05-06)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#74).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#71) on LeaderDelegation(#74).getDelegator()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#71).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#71) on LeaderDelegation(#74).getDelegator()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 김위임자 on User(#71).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#72) on LeaderDelegation(#74).getDelegatee()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on User(#72).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#72) on LeaderDelegation(#74).getDelegatee()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 이수임자 on User(#72).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#73) on LeaderDelegation(#74).getGbsGroup()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on GbsGroup(#73).getId()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#73) on LeaderDelegation(#74).getGbsGroup()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 소그룹 on GbsGroup(#73).getName()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-05 on LeaderDelegation(#74).getStartDate()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-11 on LeaderDelegation(#74).getEndDate()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['id']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorId']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorName']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegateeId']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegateeName']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['gbsGroupId']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['gbsGroupName']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['startDate']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['endDate']
2025-05-06 10:59:50 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - Starting UserControllerTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.a.controller.UserControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - The following 1 profile is active: "dev"
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=com.attendly.service.UserService#0 bean#81
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#82
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#83
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#84
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.UserController:
	{POST [/api/users/by-roles]}: getUsersByRoles(UserListByRolesRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - Started UserControllerTest in 0.154 seconds (process running for 6.441)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#81#85
2025-05-06 10:59:50 [Test worker] [b88c3ab3-6a83-4fb8-a5ae-f2a365f966e9] DEBUG i.m.i.r.states.AnsweringState - Answering [UserResponse(id=1, name=Leader User, email=leader@example.com, role=LEADER, departmentId=1, departmentName=IT 부서, birthDate=1990-01-01, createdAt=2025-05-06T10:59:50.231081, updatedAt=2025-05-06T10:59:50.231081), UserResponse(id=2, name=Member User, email=member@example.com, role=MEMBER, departmentId=1, departmentName=IT 부서, birthDate=1995-05-05, createdAt=2025-05-06T10:59:50.231081, updatedAt=2025-05-06T10:59:50.231081)] on UserService(com.attendly.service.UserService#0 bean#81).getUsersByRoles(UserListByRolesRequest(roles=[LEADER, MEMBER]))
2025-05-06 10:59:50 [Test worker] [b88c3ab3-6a83-4fb8-a5ae-f2a365f966e9] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/users/by-roles - 200 (9 ms)
2025-05-06 10:59:50 [Test worker] [b88c3ab3-6a83-4fb8-a5ae-f2a365f966e9] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"b88c3ab3-6a83-4fb8-a5ae-f2a365f966e9","apiPath":"/api/users/by-roles","method":"POST","status":200,"duration":9,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"29"},"responseHeaders":{"X-Request-ID":"b88c3ab3-6a83-4fb8-a5ae-f2a365f966e9","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'].length()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['name']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['role']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['name']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['role']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#81#86
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#81#87
2025-05-06 10:59:50 [Test worker] [b22a0300-bb5b-43f4-a6cf-d820bd3fce28] ERROR c.a.exception.GlobalExceptionHandler - MethodArgumentNotValidException: {}
org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.attendly.api.dto.UserListByRolesResponse> com.attendly.api.controller.UserController.getUsersByRoles(com.attendly.api.dto.UserListByRolesRequest): [Field error in object 'userListByRolesRequest' on field 'roles': rejected value [[]]; codes [NotEmpty.userListByRolesRequest.roles,NotEmpty.roles,NotEmpty.java.util.List,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userListByRolesRequest.roles,roles]; arguments []; default message [roles]]; default message [최소 하나 이상의 역할이 필요합니다]] 
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:159)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.kt:27)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.attendly.api.controller.UserControllerTest.should return 400 when request is invalid(UserControllerTest.kt:123)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-06 10:59:50 [Test worker] [b22a0300-bb5b-43f4-a6cf-d820bd3fce28] WARN  c.a.a.interceptor.ApiLogInterceptor - POST /api/users/by-roles - 400 (4 ms)
2025-05-06 10:59:50 [Test worker] [b22a0300-bb5b-43f4-a6cf-d820bd3fce28] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"b22a0300-bb5b-43f4-a6cf-d820bd3fce28","apiPath":"/api/users/by-roles","method":"POST","status":400,"duration":4,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"12"},"responseHeaders":{"X-Request-ID":"b22a0300-bb5b-43f4-a6cf-d820bd3fce28","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#81)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#82)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#83)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#84)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - Starting AdminLogControllerTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.a.c.admin.AdminLogControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - The following 1 profile is active: "dev"
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogService name=com.attendly.service.SystemLogService#0 bean#88
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#89
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#90
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.a.AdminLogController:
	{GET [/api/admin/logs/levels]}: getLogLevels()
	{GET [/api/admin/logs/{id}]}: getLogById(long)
	{GET [/api/admin/logs]}: getLogs(String,String,LocalDateTime,LocalDateTime,Long,String,int,int,String)
	{GET [/api/admin/logs/categories]}: getLogCategories()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=#91
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1176071230 on AuthenticationManager(#91).hashCode()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - Started AdminLogControllerTest in 0.177 seconds (process running for 6.73)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#92
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#93
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#94
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#95
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.JvmStaticMockFactory - Creating object mockk for Companion
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#96
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#97
2025-05-06 10:59:50 [Test worker] [d1d627d7-d074-4ed0-8385-7646dd6aaa88] DEBUG i.m.i.r.states.AnsweringState - Answering null on SystemLogService(com.attendly.service.SystemLogService#0 bean#88).getLogById(999)
2025-05-06 10:59:50 [Test worker] [d1d627d7-d074-4ed0-8385-7646dd6aaa88] WARN  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/999 - 404 (5 ms)
2025-05-06 10:59:50 [Test worker] [d1d627d7-d074-4ed0-8385-7646dd6aaa88] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"d1d627d7-d074-4ed0-8385-7646dd6aaa88","apiPath":"/api/admin/logs/999","method":"GET","status":404,"duration":5,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"d1d627d7-d074-4ed0-8385-7646dd6aaa88"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#98
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#99
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#100
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#101
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#102
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#103
2025-05-06 10:59:50 [Test worker] [5f6738ab-dbad-4c12-af11-5b2788d573f4] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/levels - 200 (1 ms)
2025-05-06 10:59:50 [Test worker] [5f6738ab-dbad-4c12-af11-5b2788d573f4] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"5f6738ab-dbad-4c12-af11-5b2788d573f4","apiPath":"/api/admin/logs/levels","method":"GET","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"5f6738ab-dbad-4c12-af11-5b2788d573f4","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[1]
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[2]
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#104
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#105
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#106
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#107
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#108
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#109
2025-05-06 10:59:50 [Test worker] [d178322f-1148-43d7-b27c-525f5619fe8f] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.domain.entity.SystemLog@428ff618 on SystemLogService(com.attendly.service.SystemLogService#0 bean#88).getLogById(1)
2025-05-06 10:59:50 [Test worker] [d178322f-1148-43d7-b27c-525f5619fe8f] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-05T10:59:50.639895, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@428ff618)
2025-05-06 10:59:50 [Test worker] [d178322f-1148-43d7-b27c-525f5619fe8f] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/1 - 200 (1 ms)
2025-05-06 10:59:50 [Test worker] [d178322f-1148-43d7-b27c-525f5619fe8f] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"d178322f-1148-43d7-b27c-525f5619fe8f","apiPath":"/api/admin/logs/1","method":"GET","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"d178322f-1148-43d7-b27c-525f5619fe8f","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['level']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#110
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#111
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#112
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#113
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#114
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#115
2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogService(com.attendly.service.SystemLogService#0 bean#88).getLogs(null, null, null, null, null, null, Page request [number: 0, size 20, sort: timestamp: DESC])
2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-05T10:59:50.647662, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@3fe900b0)
2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=2, level=ERROR, category=SECURITY, message=테스트 로그 메시지 2, additionalInfo=null, timestamp=2025-05-06T10:59:50.647662, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@5be0e16f)
2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs - 200 (49 ms)
2025-05-06 10:59:50 [Test worker] [68dae97f-6579-4c2c-ba04-1536810decb1] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"68dae97f-6579-4c2c-ba04-1536810decb1","apiPath":"/api/admin/logs","method":"GET","status":200,"duration":49,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"68dae97f-6579-4c2c-ba04-1536810decb1","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'].length()
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['level']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['level']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#116
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#117
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#118
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#119
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#120
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#121
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#122
2025-05-06 10:59:50 [Test worker] [1d7cbb9e-43f7-4e02-8c19-33122f1829ab] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogService(com.attendly.service.SystemLogService#0 bean#88).getLogs(ERROR, null, null, null, null, null, Page request [number: 0, size 20, sort: timestamp: DESC])
2025-05-06 10:59:50 [Test worker] [1d7cbb9e-43f7-4e02-8c19-33122f1829ab] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-05T10:59:50.704450, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@40eeb885)
2025-05-06 10:59:50 [Test worker] [1d7cbb9e-43f7-4e02-8c19-33122f1829ab] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=2, level=ERROR, category=SECURITY, message=테스트 로그 메시지 2, additionalInfo=null, timestamp=2025-05-06T10:59:50.704450, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@3a2cf8b1)
2025-05-06 10:59:50 [Test worker] [1d7cbb9e-43f7-4e02-8c19-33122f1829ab] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs - 200 (2 ms)
2025-05-06 10:59:50 [Test worker] [1d7cbb9e-43f7-4e02-8c19-33122f1829ab] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"1d7cbb9e-43f7-4e02-8c19-33122f1829ab","apiPath":"/api/admin/logs","method":"GET","status":200,"duration":2,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"1d7cbb9e-43f7-4e02-8c19-33122f1829ab","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#123
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#124
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#125
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#126
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#127
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#128
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#129
2025-05-06 10:59:50 [Test worker] [6491cf53-630b-469b-9c18-4bb039074216] DEBUG i.m.i.r.states.AnsweringState - Answering [APPLICATION, SECURITY] on SystemLogService(com.attendly.service.SystemLogService#0 bean#88).getLogCategories()
2025-05-06 10:59:50 [Test worker] [6491cf53-630b-469b-9c18-4bb039074216] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/categories - 200 (1 ms)
2025-05-06 10:59:50 [Test worker] [6491cf53-630b-469b-9c18-4bb039074216] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"6491cf53-630b-469b-9c18-4bb039074216","apiPath":"/api/admin/logs/categories","method":"GET","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"6491cf53-630b-469b-9c18-4bb039074216","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[1]
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#88#130
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#131
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#88#132
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#88#133
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#134
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#135
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#88)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#89)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#90)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - Starting AdminUserControllerTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.a.c.a.AdminUserControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - The following 1 profile is active: "dev"
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AdminUserService name=com.attendly.service.AdminUserService#0 bean#136
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#137
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#138
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#139
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogService name=com.attendly.service.SystemLogService#0 bean#140
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.a.AdminUserController:
	{GET [/api/admin/users/{userId}]}: getUser(long)
	{POST [/api/admin/users/bulk]}: bulkCreateUsers(UserBulkCreateRequest)
	{POST [/api/admin/users]}: createUser(UserCreateRequest)
	{PUT [/api/admin/users/{userId}]}: updateUser(long,UserUpdateRequest)
	{POST [/api/admin/users/{userId}/reset-password]}: resetPassword(long,UserPasswordResetRequest)
	{DELETE [/api/admin/users/{userId}]}: deleteUser(long)
	{GET [/api/admin/users]}: getAllUsers(Pageable)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 10:59:50 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - Started AdminUserControllerTest in 0.175 seconds (process running for 7.119)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of com.attendly.service.AdminUserService#0 bean#136#141
2025-05-06 10:59:50 [Test worker] [69ba3aa3-a198-45e2-b2a4-ded5fd7b205d] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).deleteUser(1)
2025-05-06 10:59:50 [Test worker] [69ba3aa3-a198-45e2-b2a4-ded5fd7b205d] INFO  c.a.a.interceptor.ApiLogInterceptor - DELETE /api/admin/users/1 - 204 (3 ms)
2025-05-06 10:59:50 [Test worker] [69ba3aa3-a198-45e2-b2a4-ded5fd7b205d] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"69ba3aa3-a198-45e2-b2a4-ded5fd7b205d","apiPath":"/api/admin/users/1","method":"DELETE","status":204,"duration":3,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"69ba3aa3-a198-45e2-b2a4-ded5fd7b205d"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of com.attendly.service.AdminUserService#0 bean#136#142
2025-05-06 10:59:50 [Test worker] [f6c07e29-cea8-4116-86f7-d34f56fce878] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).resetPassword(1, UserPasswordResetRequest(newPassword=NewPassword123!))
2025-05-06 10:59:50 [Test worker] [f6c07e29-cea8-4116-86f7-d34f56fce878] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users/1/reset-password - 200 (3 ms)
2025-05-06 10:59:50 [Test worker] [f6c07e29-cea8-4116-86f7-d34f56fce878] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"f6c07e29-cea8-4116-86f7-d34f56fce878","apiPath":"/api/admin/users/1/reset-password","method":"POST","status":200,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"33"},"responseHeaders":{"X-Request-ID":"f6c07e29-cea8-4116-86f7-d34f56fce878"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#136#143
2025-05-06 10:59:50 [Test worker] [2867367d-a449-4d50-b887-c6190f4370a4] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동, email=hong@example.com, role=LEADER, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-06T10:59:50.946017, updatedAt=2025-05-06T10:59:50.946022) on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).getUser(1)
2025-05-06 10:59:50 [Test worker] [2867367d-a449-4d50-b887-c6190f4370a4] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/users/1 - 200 (3 ms)
2025-05-06 10:59:50 [Test worker] [2867367d-a449-4d50-b887-c6190f4370a4] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"2867367d-a449-4d50-b887-c6190f4370a4","apiPath":"/api/admin/users/1","method":"GET","status":200,"duration":3,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"2867367d-a449-4d50-b887-c6190f4370a4","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:50 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserBulkCreateResponse name=child of com.attendly.service.AdminUserService#0 bean#136#144
2025-05-06 10:59:51 [Test worker] [861aa9f2-416c-4f06-a9f7-4069e6b52ceb] DEBUG i.m.i.r.states.AnsweringState - Answering UserBulkCreateResponse(createdCount=2, failedCount=0, failedEmails=[]) on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).bulkCreateUsers(UserBulkCreateRequest(users=[UserCreateRequest(name=홍길동, email=hong@example.com, password=Password123!, role=LEADER, birthDate=null, departmentId=1), UserCreateRequest(name=김철수, email=kim@example.com, password=Password123!, role=MEMBER, birthDate=null, departmentId=1)]))
2025-05-06 10:59:51 [Test worker] [861aa9f2-416c-4f06-a9f7-4069e6b52ceb] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users/bulk - 201 (7 ms)
2025-05-06 10:59:51 [Test worker] [861aa9f2-416c-4f06-a9f7-4069e6b52ceb] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"861aa9f2-416c-4f06-a9f7-4069e6b52ceb","apiPath":"/api/admin/users/bulk","method":"POST","status":201,"duration":7,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"258"},"responseHeaders":{"X-Request-ID":"861aa9f2-416c-4f06-a9f7-4069e6b52ceb","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['createdCount']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['failedCount']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['failedEmails'].length()
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.AdminUserService#0 bean#136#145
2025-05-06 10:59:51 [Test worker] [2e9da85d-2be5-4dd1-bc68-90a93923ad11] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.api.dto.UserResponse instances on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).getAllUsers(Page request [number: 0, size 10, sort: id: DESC])
2025-05-06 10:59:51 [Test worker] [2e9da85d-2be5-4dd1-bc68-90a93923ad11] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-05-06 10:59:51 [Test worker] [2e9da85d-2be5-4dd1-bc68-90a93923ad11] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/users - 200 (6 ms)
2025-05-06 10:59:51 [Test worker] [2e9da85d-2be5-4dd1-bc68-90a93923ad11] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"2e9da85d-2be5-4dd1-bc68-90a93923ad11","apiPath":"/api/admin/users","method":"GET","status":200,"duration":6,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"2e9da85d-2be5-4dd1-bc68-90a93923ad11","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'].length()
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['id']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['name']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['id']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['name']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['totalElements']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#136#146
2025-05-06 10:59:51 [Test worker] [f597b756-dcf1-4fb4-b7f1-88c4c659f479] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동, email=hong@example.com, role=LEADER, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-06T10:59:51.029414, updatedAt=2025-05-06T10:59:51.029418) on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).createUser(UserCreateRequest(name=홍길동, email=hong@example.com, password=Password123!, role=LEADER, birthDate=null, departmentId=1))
2025-05-06 10:59:51 [Test worker] [f597b756-dcf1-4fb4-b7f1-88c4c659f479] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users - 201 (3 ms)
2025-05-06 10:59:51 [Test worker] [f597b756-dcf1-4fb4-b7f1-88c4c659f479] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"f597b756-dcf1-4fb4-b7f1-88c4c659f479","apiPath":"/api/admin/users","method":"POST","status":201,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"123"},"responseHeaders":{"X-Request-ID":"f597b756-dcf1-4fb4-b7f1-88c4c659f479","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentId']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentName']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#136#147
2025-05-06 10:59:51 [Test worker] [f4e93368-bedf-45b3-8cb3-d25347c995fd] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동(수정), email=hong_updated@example.com, role=ADMIN, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-06T10:59:51.038962, updatedAt=2025-05-06T10:59:51.038966) on AdminUserService(com.attendly.service.AdminUserService#0 bean#136).updateUser(1, UserUpdateRequest(name=홍길동(수정), email=hong_updated@example.com, birthDate=null, role=ADMIN, departmentId=null))
2025-05-06 10:59:51 [Test worker] [f4e93368-bedf-45b3-8cb3-d25347c995fd] INFO  c.a.a.interceptor.ApiLogInterceptor - PUT /api/admin/users/1 - 200 (3 ms)
2025-05-06 10:59:51 [Test worker] [f4e93368-bedf-45b3-8cb3-d25347c995fd] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"f4e93368-bedf-45b3-8cb3-d25347c995fd","apiPath":"/api/admin/users/1","method":"PUT","status":200,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"115"},"responseHeaders":{"X-Request-ID":"f4e93368-bedf-45b3-8cb3-d25347c995fd","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#136)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#137)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#138)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#139)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#140)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-06 10:59:51 [Test worker] [16fbe831-49e2-4c7d-a5f6-227c2db2ace0] INFO  c.a.a.interceptor.ApiLogInterceptor -   - 200 (0 ms)
2025-05-06 10:59:51 [Test worker] [16fbe831-49e2-4c7d-a5f6-227c2db2ace0] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"16fbe831-49e2-4c7d-a5f6-227c2db2ace0","apiPath":"","method":"","status":200,"duration":0,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"16fbe831-49e2-4c7d-a5f6-227c2db2ace0"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-06 10:59:51 [Test worker] [0003fe36-2ac7-47da-9c7c-580625d8a3d4] WARN  c.a.a.interceptor.ApiLogInterceptor - GET /api/users/999 - 404 (0 ms)
2025-05-06 10:59:51 [Test worker] [0003fe36-2ac7-47da-9c7c-580625d8a3d4] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"0003fe36-2ac7-47da-9c7c-580625d8a3d4","apiPath":"/api/users/999","method":"GET","status":404,"duration":0,"requestHeaders":{},"responseHeaders":{"Content-Type":"application/json","X-Request-ID":"0003fe36-2ac7-47da-9c7c-580625d8a3d4"},"requestBody":null,"responseBody":"{\"error\":\"User not found\",\"status\":404}","queryParams":null}
2025-05-06 10:59:51 [Test worker] [de298967-fbad-4b02-8cbe-769db4ec03f8] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/users - 201 (0 ms)
2025-05-06 10:59:51 [Test worker] [de298967-fbad-4b02-8cbe-769db4ec03f8] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"de298967-fbad-4b02-8cbe-769db4ec03f8","apiPath":"/api/users","method":"POST","status":201,"duration":0,"requestHeaders":{"Content-Type":"application/json"},"responseHeaders":{"Content-Type":"application/json","X-Request-ID":"de298967-fbad-4b02-8cbe-769db4ec03f8"},"requestBody":null,"responseBody":"{\"id\":1,\"name\":\"홍길동\",\"email\":\"hong@example.com\"}","queryParams":null}
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.AttendanceRepositoryCustomTest - Starting AttendanceRepositoryCustomTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG c.a.d.r.AttendanceRepositoryCustomTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.AttendanceRepositoryCustomTest - The following 1 profile is active: "test"
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-06 10:59:51 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.AttendanceRepositoryCustomTest - Started AttendanceRepositoryCustomTest in 1.658 seconds (process running for 8.953)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        count(a1_0.id) 
    from
        attendance a1_0 
    where
        a1_0.gbs_id in (?, ?) 
        and a1_0.week_start=? 
        and a1_0.worship=?
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:52 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.member_id=? 
        and a1_0.week_start between ? and ?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.member_id=? 
        and a1_0.week_start between ? and ?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - Starting GbsGroupRepositoryCustomTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG c.a.d.r.GbsGroupRepositoryCustomTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - The following 1 profile is active: "test"
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - Started GbsGroupRepositoryCustomTest in 0.244 seconds (process running for 9.688)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at 
    from
        gbs_group gg1_0 
    join
        village v1_0 
            on v1_0.id=gg1_0.village_id 
    where
        v1_0.id=? 
        and gg1_0.term_start_dt<=? 
        and gg1_0.term_end_dt>=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at 
    from
        gbs_group gg1_0 
    join
        village v1_0 
            on v1_0.id=gg1_0.village_id 
    where
        v1_0.id=? 
        and gg1_0.term_start_dt<=? 
        and gg1_0.term_end_dt>=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.village_id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.birth_date,
        l1_0.created_at,
        l1_0.department_id,
        l1_0.email,
        l1_0.name,
        l1_0.password,
        l1_0.role,
        l1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    join
        users l1_0 
            on l1_0.id=glh1_0.leader_id 
    where
        glh1_0.gbs_id=? 
        and glh1_0.end_dt is null
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village_leader vl1_0 
    where
        vl1_0.user_id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        glh1_0.id,
        glh1_0.created_at,
        glh1_0.end_dt,
        glh1_0.gbs_id,
        glh1_0.leader_id,
        glh1_0.start_dt,
        glh1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    where
        glh1_0.gbs_id=? 
        and glh1_0.leader_id=? 
        and glh1_0.end_dt is null
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village v1_0 
    left join
        village_leader vl1_0 
            on v1_0.id=vl1_0.village_id 
    where
        v1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        users u1_0 
    left join
        village_leader vl1_0 
            on u1_0.id=vl1_0.user_id 
    where
        u1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        glh1_0.id,
        glh1_0.created_at,
        glh1_0.end_dt,
        glh1_0.gbs_id,
        glh1_0.leader_id,
        glh1_0.start_dt,
        glh1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    where
        glh1_0.gbs_id=? 
        and glh1_0.leader_id=? 
        and glh1_0.end_dt is null
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village v1_0 
    left join
        village_leader vl1_0 
            on v1_0.id=vl1_0.village_id 
    where
        v1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        users u1_0 
    left join
        village_leader vl1_0 
            on u1_0.id=vl1_0.user_id 
    where
        u1_0.id=?
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        count(gmh1_0.id) 
    from
        gbs_member_history gmh1_0 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gmh1_0.id,
        gmh1_0.created_at,
        gmh1_0.end_dt,
        gmh1_0.gbs_id,
        gmh1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        gmh1_0.start_dt,
        gmh1_0.updated_at 
    from
        gbs_member_history gmh1_0 
    join
        users m1_0 
            on m1_0.id=gmh1_0.member_id 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        gmh1_0.id,
        gmh1_0.created_at,
        gmh1_0.end_dt,
        gmh1_0.gbs_id,
        gmh1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.role,
        m1_0.updated_at,
        gmh1_0.start_dt,
        gmh1_0.updated_at 
    from
        gbs_member_history gmh1_0 
    join
        users m1_0 
            on m1_0.id=gmh1_0.member_id 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.SystemLogRepositoryTest - Starting SystemLogRepositoryTest using Java 21.0.6 with PID 58142 (started by user in /Users/user/study/attendly-api)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG c.a.d.r.SystemLogRepositoryTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.SystemLogRepositoryTest - The following 1 profile is active: "test"
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] INFO  c.a.d.r.SystemLogRepositoryTest - Started SystemLogRepositoryTest in 0.188 seconds (process running for 10.153)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        lower(sl1_0.message) like lower(('%'||?||'%')) escape '' 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        lower(sl1_0.message) like lower(('%'||?||'%')) escape '' 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.timestamp between ? and ? 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.category=? 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.category=? 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.level=? 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.level=? 
    fetch
        first ? rows only
2025-05-06 10:59:53 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#148
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#149
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #148#150
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(#148).findByEmail(test@example.com)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#151
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #151#152
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#151).findByEmail(nonexistent@example.com)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#153
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#154
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#155
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#156
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#157
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on HttpServletRequest(request#155).getHeader(Authorization)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#153).doFilter(HttpServletRequest(request#155), HttpServletResponse(response#156))
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#153#158
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#159
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#160
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#161
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#162
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#163
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.JvmStaticMockFactory - Creating static mockk for SecurityContextHolder
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG io.mockk.proxy.jvm.StaticProxyMaker - Transforming class org.springframework.security.core.context.SecurityContextHolder for static method interception
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#164
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=child of static SecurityContextHolder#165
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #164#166
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#163#167
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#161).getHeader(Authorization)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering testuser on JwtTokenProvider(jwtTokenProvider#160).extractUsername(test-jwt-token)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#164) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on SecurityContext(#164).getAuthentication()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on UserDetailsService(userDetailsService#163).loadUserByUsername(testuser)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering false on JwtTokenProvider(jwtTokenProvider#160).validateToken(test-jwt-token, org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]])
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#159).doFilter(HttpServletRequest(request#161), HttpServletResponse(response#162))
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#159#168
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #164#169
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#170
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#171
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#172
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#173
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#174
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#175
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=child of static SecurityContextHolder#176
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #175#177
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#174#178
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#172).getHeader(Authorization)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering testuser on JwtTokenProvider(jwtTokenProvider#171).extractUsername(test-jwt-token)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#175) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on SecurityContext(#175).getAuthentication()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on UserDetailsService(userDetailsService#174).loadUserByUsername(testuser)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering true on JwtTokenProvider(jwtTokenProvider#171).validateToken(test-jwt-token, org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]])
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering  on HttpServletRequest(request#172).getRemoteAddr()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpSession name=child of request#172#179
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering HttpSession(child of request#172#179) on HttpServletRequest(request#172).getSession(false)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering  on HttpSession(child of request#172#179).getId()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#175) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on SecurityContext(#175).setAuthentication(UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=, SessionId=], Granted Authorities=[]])
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#170).doFilter(HttpServletRequest(request#172), HttpServletResponse(response#173))
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#170#180
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #175#181
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#182
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#183
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#184
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#185
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#186
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#184).getHeader(Authorization)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Throwing java.lang.RuntimeException: Token extraction failed on JwtTokenProvider(jwtTokenProvider#183).extractUsername(test-jwt-token)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#182).doFilter(HttpServletRequest(request#184), HttpServletResponse(response#185))
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#182#187
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#186#188
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#189
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#190
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#191
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#192
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#193
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering InvalidFormat on HttpServletRequest(request#191).getHeader(Authorization)
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#189).doFilter(HttpServletRequest(request#191), HttpServletResponse(response#192))
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#189#194
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.JvmStaticMockFactory - Disposing object mockk for Companion hashcode=33bb4935
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.JvmStaticMockFactory - Disposing static mockk for class org.springframework.security.core.context.SecurityContextHolder
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#195
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#196
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #196#197
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#196).getId()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#196).getUsername()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#198
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering other@example.com on UserDetailsAdapter(#198).getUsername()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#199
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#200
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #200#201
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#200).getId()
2025-05-06 10:59:54 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#200).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#202
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#203
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #203#204
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#203).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#203).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#205
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#206
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #206#207
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#206).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#206).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#208
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#209
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #209#210
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#209).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#209).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#211
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#212
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #212#213
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#212).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#212).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#214
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#215
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #215#216
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#215).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#215).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#215).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#217
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#218
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #218#219
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#218).getId()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#218).getUsername()
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#220
2025-05-06 10:59:55 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#221
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#222
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#223
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#224
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #224#225
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#226
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #226#227
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#228
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #228#229
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#230
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #230#231
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#232
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #232#233
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#234
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#235
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #235#236
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #228#237
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #223#238
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#239
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #239#240
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #222#241
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#222) on SecurityContext(#223).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#239) on Authentication(#222).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#230) on UserDetailsAdapter(#239).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#230).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#230).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#230).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#230).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 4 on User(#230).getId()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering false on AttendanceService(#220).hasLeaderAccess(1, 4)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#242
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#243
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#244
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#245
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#246
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #246#247
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#248
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #248#249
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#250
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #250#251
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#252
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #252#253
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#254
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #254#255
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#256
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#257
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #257#258
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #250#259
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #245#260
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#261
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #261#262
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #244#263
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#244) on SecurityContext(#245).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#261) on Authentication(#244).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#252) on UserDetailsAdapter(#261).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#252).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#252).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#252).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#252).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 4 on User(#252).getId()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering true on AttendanceService(#242).hasLeaderAccess(1, 4)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#264
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#265
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#266
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#267
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#268
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #268#269
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#270
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #270#271
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#272
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #272#273
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#274
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #274#275
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#276
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #276#277
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#278
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#279
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #279#280
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #272#281
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #267#282
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#283
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #283#284
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #266#285
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#266) on SecurityContext(#267).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#283) on Authentication(#266).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#274) on UserDetailsAdapter(#283).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#274).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#274).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#274).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#286
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#287
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#288
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#289
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#290
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #290#291
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#292
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #292#293
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#294
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #294#295
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#296
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #296#297
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#298
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #298#299
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#300
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#301
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #301#302
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #294#303
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #289#304
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #288#305
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#288) on SecurityContext(#289).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#288).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#306
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#307
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#308
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#309
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#310
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #310#311
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#312
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #312#313
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#314
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #314#315
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#316
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #316#317
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#318
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #318#319
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#320
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#321
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #321#322
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #314#323
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #309#324
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#325
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #325#326
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #308#327
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#308) on SecurityContext(#309).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#325) on Authentication(#308).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#314) on UserDetailsAdapter(#325).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#314).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#314).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#314).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(#321) on User(#314).getVillageLeader()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Village(#320) on VillageLeader(#321).getVillage()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on Village(#320).getId()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#328
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#329
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#330
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#331
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#332
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #332#333
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#334
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #334#335
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#336
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #336#337
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#338
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #338#339
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#340
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #340#341
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#342
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#343
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #343#344
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #336#345
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #331#346
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#347
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #347#348
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #330#349
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#330) on SecurityContext(#331).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#347) on Authentication(#330).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#336) on UserDetailsAdapter(#347).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#336).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#336).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#336).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#350
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#351
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#352
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#353
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#354
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #354#355
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#356
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #356#357
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#358
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #358#359
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#360
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #360#361
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#362
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #362#363
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#364
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#365
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #365#366
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #358#367
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #353#368
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#369
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #369#370
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #352#371
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#352) on SecurityContext(#353).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#369) on Authentication(#352).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#356) on UserDetailsAdapter(#369).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#356).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#356).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#372
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#373
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#374
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#375
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#376
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #376#377
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#378
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #378#379
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#380
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #380#381
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#382
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #382#383
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#384
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #384#385
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#386
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#387
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #387#388
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #380#389
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #375#390
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#391
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #391#392
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #374#393
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#374) on SecurityContext(#375).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#391) on Authentication(#374).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#376) on UserDetailsAdapter(#391).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#376).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#394
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#395
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#396
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#397
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#398
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #398#399
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#400
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #400#401
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#402
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #402#403
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#404
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #404#405
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#406
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #406#407
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#408
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#409
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #409#410
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #402#411
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #397#412
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#413
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #413#414
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #396#415
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#396) on SecurityContext(#397).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#413) on Authentication(#396).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#402) on UserDetailsAdapter(#413).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#402).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#402).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#402).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(#409) on User(#402).getVillageLeader()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Village(#408) on VillageLeader(#409).getVillage()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on Village(#408).getId()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#416
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#417
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#418
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#419
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#420
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #420#421
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#422
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #422#423
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#424
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #424#425
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#426
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #426#427
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#428
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #428#429
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#430
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#431
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #431#432
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #424#433
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #419#434
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#435
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #435#436
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #418#437
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#418) on SecurityContext(#419).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#435) on Authentication(#418).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#428) on UserDetailsAdapter(#435).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#428).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#428).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#428).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#428).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#438
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#439
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#440
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#441
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#442
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #442#443
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#444
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #444#445
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#446
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #446#447
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#448
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #448#449
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#450
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #450#451
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#452
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#453
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #453#454
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #446#455
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #441#456
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#457
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #457#458
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #440#459
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#457) on Authentication(#440).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#444) on UserDetailsAdapter(#457).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#444).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#460
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#461
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#462
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#463
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#464
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #464#465
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#466
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #466#467
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#468
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #468#469
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#470
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #470#471
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#472
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #472#473
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#474
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#475
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #475#476
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #468#477
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #463#478
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#479
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #479#480
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #462#481
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#462) on SecurityContext(#463).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#479) on Authentication(#462).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#464) on UserDetailsAdapter(#479).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#464).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#482
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#483
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#484
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#485
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#486
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #486#487
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#488
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #488#489
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#490
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #490#491
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#492
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #492#493
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#494
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #494#495
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#496
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#497
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #497#498
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #490#499
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #485#500
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #484#501
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#484).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#502
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#503
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#504
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#505
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#506
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #506#507
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#508
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #508#509
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#510
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #510#511
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#512
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #512#513
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#514
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #514#515
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#516
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#517
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #517#518
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #510#519
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #505#520
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #504#521
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#504) on SecurityContext(#505).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#504).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#522
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#523
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#524
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#525
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#526
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #526#527
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#528
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #528#529
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#530
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #530#531
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#532
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #532#533
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#534
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #534#535
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#536
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#537
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #537#538
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #530#539
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #525#540
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#541
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #541#542
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #524#543
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#541) on Authentication(#524).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#526) on UserDetailsAdapter(#541).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#526).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#544
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#545
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#546
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#547
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#548
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #548#549
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#550
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #550#551
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#552
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #552#553
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#554
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #554#555
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#556
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #556#557
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#558
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#559
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #559#560
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #552#561
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #547#562
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#563
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #563#564
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #546#565
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#546) on SecurityContext(#547).getAuthentication()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#563) on Authentication(#546).getPrincipal()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(#550) on UserDetailsAdapter(#563).getUser()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#550).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#550).getRole()
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#566
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#567
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #566#568
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[BatchJob(id=1, jobType=GBS_REORGANIZATION, status=COMPLETED)] on BatchJobRepository(#566).findById(1)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#569
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#570
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJob name=child of #569#571
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering {"key1":"value1","key2":"value2"} on ObjectMapper(#570).writeValueAsString({key1=value1, key2=value2})
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering BatchJob(id=1, jobType=GBS_REORGANIZATION, status=QUEUED) on BatchJobRepository(#569).save(BatchJob(id=null, jobType=GBS_REORGANIZATION, status=QUEUED))
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#572
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#573
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #572#574
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#572).findById(999)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#575
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#576
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #575#577
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[BatchJob(id=1, jobType=GBS_REORGANIZATION, status=RUNNING)] on BatchJobRepository(#575).findById(1)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#578
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#579
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #578#580
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#578).findById(999)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#581
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#582
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #581#583
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#581).findById(999)
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#584
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#585
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#586
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#587
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#588
2025-05-06 10:59:56 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#589
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #585#590
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(#585).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#591
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#592
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#593
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#594
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#595
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#596
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #593#597
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#593).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#598
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#599
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#600
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#601
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#602
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#603
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering false on DepartmentRepository(#598).existsById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#604
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#605
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#606
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#607
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#608
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#609
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #605#610
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(#605).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#611
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#612
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#613
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#614
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#615
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#616
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #611#617
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#611).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#618
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#619
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#620
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#621
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#622
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#623
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #620#624
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #621#625
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(#620).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#621).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#626
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#627
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#628
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#629
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#630
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#631
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #626#632
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#626).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#633
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#634
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#635
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#636
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#637
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#638
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #633#639
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#633).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#640
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#641
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#642
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#643
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#644
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#645
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #640#646
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#640).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#647
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#648
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#649
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#650
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#651
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#652
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #649#653
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#649).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#654
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#655
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#656
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of #654#657
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.User instances on UserRepository(#654).findAll(Page request [number: 0, size 10, sort: UNSORTED])
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#658
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#659
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#660
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering true on UserRepository(#658).existsById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on UserRepository(#658).deleteById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #658#661
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#662
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#663
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#664
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #663#665
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #662#666
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #662#667
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#662).findByEmail(hong@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(#663).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering encodedPassword on PasswordEncoder(#664).encode(Password123!)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(#662).save(User(id=null, name='홍길동', role=LEADER))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#668
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#669
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#670
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering false on UserRepository(#668).existsById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #668#671
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#672
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#673
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#674
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #672#675
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #672#676
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#672).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering newEncodedPassword on PasswordEncoder(#674).encode(NewPassword123!)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(#672).save(User(id=1, name='홍길동', role=LEADER))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#677
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#678
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#679
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #677#680
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='기존사용자', role=MEMBER)] on UserRepository(#677).findByEmail(hong@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #678#681
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #677#682
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#683
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#684
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#685
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #683#686
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #683#687
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #683#688
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#683).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#683).findByEmail(hong_updated@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동(수정)', role=ADMIN) on UserRepository(#683).save(User(id=1, name='홍길동(수정)', role=ADMIN))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#689
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#690
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#691
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #689#692
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#689).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#693
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#694
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#695
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#696
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#697
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#698
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#699
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#700
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#701
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#701#702
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#695#703
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#693#704
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#696#705
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='테스트 마을')] on VillageRepository(villageRepository#701).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#695).findActiveGroupsByVillageId(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-05)] on AttendanceRepository(attendanceRepository#693).findDetailsByGbsIdAndWeek(1, 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=4, name='리더', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#696).findCurrentLeaderByGbsId(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 5 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#697).countActiveMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#706
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#707
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#708
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#709
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#710
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#711
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#712
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#713
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#714
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#709#715
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#709).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#716
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#717
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#718
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#719
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#720
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#721
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#722
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#723
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#724
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#724#725
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#718#726
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#716#727
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#719#728
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='테스트 마을')] on VillageRepository(villageRepository#724).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#718).findActiveGroupsByVillageId(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-05)] on AttendanceRepository(attendanceRepository#716).findDetailsByGbsIdAndWeek(1, 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=4, name='리더', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#719).findCurrentLeaderByGbsId(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 10 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#720).countActiveMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#729
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#730
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#731
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#732
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#733
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#734
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#735
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#736
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#737
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#732#738
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#734#739
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#732).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(id=1, delegator=2, delegatee=1, gbsGroup=1)] on LeaderDelegationRepository(leaderDelegationRepository#734).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#740
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#741
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#742
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#743
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#744
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#745
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#746
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#747
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#748
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#743#749
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#745#750
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#743).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(leaderDelegationRepository#745).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#751
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#752
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#753
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#754
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#755
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#756
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#757
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#758
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#759
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#757#760
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#752#761
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#753#762
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#754#763
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#756#764
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#752) on SecurityContext(securityContext#757).getAuthentication()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@7c88e713 on Authentication(authentication#752).getPrincipal()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#753).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#754).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(leaderDelegationRepository#756).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#765
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#766
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#767
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#768
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#769
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#770
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#771
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#772
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#773
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#771#774
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#766#775
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#767#776
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#768#777
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#765#778
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#772#779
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#772#780
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#769#781
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#765#782
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#766) on SecurityContext(securityContext#771).getAuthentication()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@26dde03f on Authentication(authentication#766).getPrincipal()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#767).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#768).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#765).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='조원1', role=MEMBER)] on UserRepository(userRepository#772).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2), GbsMemberHistory(id=2, gbsGroup=1, member=3)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#769).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-06, endDate=2025-05-06))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=3, name='조원2', role=MEMBER)] on UserRepository(userRepository#772).findById(3)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2), GbsMemberHistory(id=2, gbsGroup=1, member=3)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#769).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-06, endDate=2025-05-06))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-05), Attendance(id=2, member=3, week=2025-05-05)] on AttendanceRepository(attendanceRepository#765).saveAll([Attendance(id=null, member=2, week=2025-05-05), Attendance(id=null, member=3, week=2025-05-05)])
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#783
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#784
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#785
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#786
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#787
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#788
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#789
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#790
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#791
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#789#792
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#784#793
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#785#794
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#783#795
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#790#796
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#787#797
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#783#798
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#784) on SecurityContext(securityContext#789).getAuthentication()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@471c9424 on Authentication(authentication#784).getPrincipal()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#785).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#783).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='조원', role=MEMBER)] on UserRepository(userRepository#790).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#787).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-06, endDate=2025-05-06))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-05)] on AttendanceRepository(attendanceRepository#783).saveAll([Attendance(id=null, member=2, week=2025-05-05)])
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#799
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#800
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#801
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#802
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#803
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#804
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#805
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#806
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#807
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#805#808
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#800#809
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#801#810
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#802#811
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#799#812
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#806#813
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#803#814
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#800) on SecurityContext(securityContext#805).getAuthentication()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@26558c25 on Authentication(authentication#800).getPrincipal()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#801).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#802).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#799).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=5, name='타GBS 조원', role=MEMBER)] on UserRepository(userRepository#806).findById(5)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#803).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-06, endDate=2025-05-06))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#815
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#816
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#817
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#818
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#819
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#820
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#821
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#822
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#823
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#817#824
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#815#825
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#817).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-05)] on AttendanceRepository(attendanceRepository#815).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-05)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#826
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#827
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#828
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#829
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#830
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#831
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#832
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#833
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#834
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #834#835
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #834#836
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #834#837
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #831#838
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=#839
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #832#840
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #830#841
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#834).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#834).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#834).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#834).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#834).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(#839) on GbsLeaderHistoryRepository(#831).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#834).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#832).findActiveByGbsIdAndDelegateeId(1, 1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#830).getGbsMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#842
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#843
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#844
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#845
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#846
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#847
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#848
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#849
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#850
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #850#851
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #850#852
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #850#853
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#854
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#855
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #846#856
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #846#857
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#850).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#850).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#850).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#850).getVillageLeader()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='테스트 GBS') on OrganizationService(#846).getGbsGroupById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#850).getVillageLeader()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#846).getGbsMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#858
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#859
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#860
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#861
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#862
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#863
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#864
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#865
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#866
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #866#867
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #866#868
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #866#869
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#866).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#866).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#866).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#866).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#870
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#871
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#872
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#873
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#874
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#875
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#876
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#877
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#878
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #878#879
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #878#880
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #878#881
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #874#882
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#878).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#878).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#874).getGbsMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#883
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#884
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#885
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#886
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#887
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#888
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#889
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#890
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#891
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #891#892
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #891#893
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #891#894
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #888#895
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #889#896
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#897
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #887#898
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#891).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#891).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#891).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#891).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#891).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#888).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 200)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#891).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(#897) on LeaderDelegationRepository(#889).findActiveByGbsIdAndDelegateeId(1, 200, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#887).getGbsMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#899
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#900
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#901
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#902
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#903
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#904
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#905
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#906
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#907
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #907#908
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #907#909
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #907#910
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #903#911
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#907).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#903).getGbsMembers(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#912
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#913
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#914
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#915
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#916
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#917
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#918
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#919
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#920
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #920#921
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #920#922
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #920#923
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #916#924
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #916#925
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #917#926
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#920).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#920).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on GbsLeaderHistoryRepository(#917).findByLeaderIdWithDetailsOrderByStartDateDesc(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=2, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#916).getGbsMembers(2, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-06, phoneNumber=null), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-06, phoneNumber=null)]) on OrganizationService(#916).getGbsMembers(1, 2022-12-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 사용자 on User(#920).getName()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 사용자 on User(#920).getName()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#927
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#928
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#929
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#930
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#931
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#932
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#933
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#934
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#935
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #935#936
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #935#937
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #935#938
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #932#939
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #933#940
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#935).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#935).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#935).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#935).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#935).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#932).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#935).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#933).findActiveByGbsIdAndDelegateeId(1, 1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#941
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#942
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#943
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#944
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#945
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#946
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#947
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#948
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#949
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #949#950
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #949#951
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #949#952
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#953
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#954
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #945#955
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#949).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#949).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#949).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#949).getVillageLeader()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='테스트 GBS') on OrganizationService(#945).getGbsGroupById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#949).getVillageLeader()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#949).getRole()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#956
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#957
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#958
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#959
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#960
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#961
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#962
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#963
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#964
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #964#965
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #964#966
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #964#967
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#968
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #961#969
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on GbsLeaderHistoryRepository(#961).findByLeaderIdAndEndDateIsNull(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#964).getId()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 리더1 on User(#964).getName()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#970
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#971
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#972
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#973
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#974
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#975
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#976
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#977
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #975#978
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#975).findByLeaderIdAndEndDateIsNull(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#979
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#980
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#981
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #980#982
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #980#983
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #981#984
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#980).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#980).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#981).findById(3)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#985
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#986
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#987
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #986#988
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #986#989
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #987#990
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#986).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#986).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#987).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#991
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#992
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#993
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #992#994
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #992#995
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #993#996
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#992).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#992).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#993).findById(3)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#997
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#998
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#999
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #997#1000
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(id=1, delegator=1, delegatee=2, gbsGroup=3)] on LeaderDelegationRepository(#997).findActiveByDelegateIdAndDate(2, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1001
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1002
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1003
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1002#1004
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1002#1005
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1003#1006
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1001#1007
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1002).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1002).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1003).findById(3)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(id=99, delegator=1, delegatee=2, gbsGroup=3) on LeaderDelegationRepository(#1001).findActiveByGbsGroupIdAndDate(3, 2025-05-07)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1008
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1009
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1010
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1009#1011
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1009#1012
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1010#1013
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1008#1014
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1008#1015
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1009).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1009).findById(2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1010).findById(3)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#1008).findActiveByGbsGroupIdAndDate(3, 2025-05-07)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(id=1, delegator=1, delegatee=2, gbsGroup=3) on LeaderDelegationRepository(#1008).save(LeaderDelegation(id=null, delegator=1, delegatee=2, gbsGroup=3))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1016
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1017
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1018
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1017#1019
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#1017).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1020
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1021
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1022
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1021#1023
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1021#1024
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1021).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#1021).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1025
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1026
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1027
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1028
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1029
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of departmentRepository#1025#1030
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1025).findAll()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1031
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1032
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1033
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1034
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1035
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1035#1036
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='1마을')] on VillageRepository(villageRepository#1035).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1037
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1038
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1039
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1040
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1041
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1037#1042
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(departmentRepository#1037).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1043
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1044
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1045
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1046
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1047
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1045#1048
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1045).findCurrentLeaderByGbsId(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1049
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1050
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1051
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1052
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1053
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1049#1054
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1049).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1055
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1056
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1057
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1058
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1059
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#1056#1060
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1056).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1061
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1062
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1063
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1064
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1065
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#1062#1066
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1062).findActiveGroupsByVillageId(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1067
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1068
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1069
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1070
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1071
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#1068#1072
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(gbsGroupRepository#1068).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1073
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1074
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1075
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1076
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1077
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1077#1078
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#1074#1079
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='1마을')] on VillageRepository(villageRepository#1077).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1074).findByVillage(Village(id=1, name='1마을'))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1080
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1081
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1082
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1083
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1084
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1084#1085
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(villageRepository#1084).findById(999)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1086
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1087
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1088
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1089
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1090
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1088#1091
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1088).findCurrentLeaderByGbsId(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1092
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1093
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1094
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1095
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1096
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1092#1097
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of villageRepository#1096#1098
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1092).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Village(id=1, name='1마을')] on VillageRepository(villageRepository#1096).findByDepartment(Department(id=1, name='청년부'))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1099
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1100
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1101
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1102
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1103
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=child of organizationService#1103#1104
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1103#1105
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Department(id=1, name='청년부') on OrganizationService(organizationService#1103).getDepartmentById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on OrganizationService(organizationService#1103).getVillagesByDepartment(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1106
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1107
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1108
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1109
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1110
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=child of organizationService#1110#1111
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1110#1112
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1113
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageStatistics name=child of #1113#1114
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Department(id=1, name='청년부') on OrganizationService(organizationService#1110).getDepartmentById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [Village(id=1, name='1마을')] on OrganizationService(organizationService#1110).getVillagesByDepartment(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VillageStatistics(villageId=1, villageName=1마을, gbsStats=[], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1113).getVillageStatistics(1, 2023-01-01, 2023-01-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering DepartmentStatistics(departmentId=1, departmentName=청년부, startDate=2023-01-01, endDate=2023-01-31, villageStats=[VillageStatistics(villageId=1, villageName=1마을, gbsStats=[], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0)], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1113).getDepartmentStatistics(1, 2023-01-01, 2023-01-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1115
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1116
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1117
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1118
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1119
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1120
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1121
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1122
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1123
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1124
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of organizationService#1124#1125
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1124#1126
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Village(id=1, name='1마을') on OrganizationService(organizationService#1124).getVillageById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [] on OrganizationService(organizationService#1124).getActiveGbsGroupsByVillage(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1127
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1128
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1129
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1130
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1131
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of organizationService#1131#1132
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1131#1133
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1134
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsStatistics name=child of #1134#1135
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Village(id=1, name='1마을') on OrganizationService(organizationService#1131).getVillageById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on OrganizationService(organizationService#1131).getActiveGbsGroupsByVillage(1, 2025-05-06)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0, weeklyStats=[]) on StatisticsService(#1134).getGbsStatistics(1, 2023-01-01, 2023-01-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering VillageStatistics(villageId=1, villageName=1마을, gbsStats=[GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0, weeklyStats=[])], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1134).getVillageStatistics(1, 2023-01-01, 2023-01-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1136
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1137
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1138
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1139
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1140
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of organizationService#1140#1141
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#1136#1142
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#1136#1143
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1144
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsStatistics name=child of #1144#1145
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=3, attendanceRate=30.0, averageQtCount=3.5, weeklyStats=[WeeklyStatistics(weekStart=2023-01-01, totalMembers=10, attendedMembers=2, attendanceRate=20.0, averageQtCount=3.5), WeeklyStatistics(weekStart=2023-01-08, totalMembers=10, attendedMembers=1, attendanceRate=10.0, averageQtCount=3.5)]) on StatisticsService(#1144).getGbsStatistics(1, 2023-01-01, 2023-01-31)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1146
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1147
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1148
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1149
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1148#1150
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of #1146#1151
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogRepository(#1146).searchLogs(INFO, TEST, null, null, null, null, Page request [number: 0, size 10, sort: UNSORTED])
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1152
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1153
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1154
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1155
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1154#1156
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1157
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1158
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1159
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1160
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1159#1161
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1157#1162
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[com.attendly.domain.entity.SystemLog@9501d5c] on SystemLogRepository(#1157).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1163
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1164
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1165
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1166
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1165#1167
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=#1168
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #1166#1169
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of #1163#1170
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#1166) on SecurityContext(#1165).getAuthentication()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering true on Authentication(#1166).isAuthenticated()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on Authentication(#1166).getPrincipal()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering 127.0.0.1 on HttpServletRequest(#1168).getRemoteAddr()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Test User Agent on HttpServletRequest(#1168).getHeader(User-Agent)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.domain.entity.SystemLog@11e47c87 on SystemLogRepository(#1163).save(com.attendly.domain.entity.SystemLog@41da17a2)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1171
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1172
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1173
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1173#1174
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1171#1175
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1173).findByEmail(test@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(departmentRepository#1171).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1173#1176
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1177
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1178
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1179
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1180
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1179#1181
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on Authentication(#1180).getName()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1179).findByEmail(test@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1182
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1183
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1184
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1184#1185
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1182#1186
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1184#1187
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1184).findByEmail(test@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='대학부')] on DepartmentRepository(departmentRepository#1182).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering encoded_password on PasswordEncoder(passwordEncoder#1183).encode(password123)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(userRepository#1184).save(User(id=null, name='홍길동', role=LEADER))
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1188
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1189
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1190
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1191
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1190#1192
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering nonexistent@example.com on Authentication(#1191).getName()
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1190).findByEmail(nonexistent@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1193
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1194
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1195
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1195#1196
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1195).findById(1)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1197
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1198
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1199
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1199#1200
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1199#1201
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1199).findByRole(LEADER)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=2, name='Member User', role=MEMBER)] on UserRepository(userRepository#1199).findByRole(MEMBER)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1202
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1203
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1204
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1204#1205
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1204).findByEmail(test@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1206
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1207
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1208
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1208#1209
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1208#1210
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1208).findByRole(LEADER)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1208).findByRole(VILLAGE_LEADER)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1211
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1212
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1213
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1214
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1215
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1216
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1216#1217
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='기존 사용자', role=MEMBER)] on UserRepository(userRepository#1216).findByEmail(test@example.com)
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1214#1218
2025-05-06 10:59:57 [Test worker] [58d002be-2142-4f3b-87f8-752c557f40ec] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1216#1219
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-06 10:59:57 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
