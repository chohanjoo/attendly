2025-05-09 23:40:33 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:33 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - Starting AuthControllerTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG c.a.a.controller.AuthControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:33 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=com.attendly.service.UserService#0 bean#6
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#7
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#8
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#9
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.AuthController:
	{POST [/auth/login]}: login(LoginRequest)
	{POST [/auth/refresh]}: refreshToken(TokenRefreshRequest)
	{POST [/auth/signup]}: signup(SignupRequest)
	{GET [/auth/me]}: getCurrentUser(UserDetailsAdapter)
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG com.attendly.config.RequestIdFilter - Filter 'requestIdFilter' configured for use
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-09 23:40:33 [Test worker] [NONE] INFO  c.a.a.controller.AuthControllerTest - Started AuthControllerTest in 0.289 seconds (process running for 5.876)
2025-05-09 23:40:33 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SignupResponse name=child of com.attendly.service.UserService#0 bean#6#10
2025-05-09 23:40:33 [Test worker] [f7e2a9ea-7dcc-4baf-ac7e-1402bfaeaf61] DEBUG i.m.i.r.states.AnsweringState - Answering SignupResponse(userId=1, name=홍길동, email=test@example.com, phoneNumber=010-1234-5678, role=LEADER) on UserService(com.attendly.service.UserService#0 bean#6).signup(SignupRequest(email=test@example.com, password=password123, name=홍길동, phoneNumber=010-1234-5678, role=LEADER, departmentId=1))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [8a5513b3-b34d-4273-9f36-8ea7411095b1] ERROR c.a.exception.GlobalExceptionHandler - MethodArgumentNotValidException: {}
org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.attendly.api.dto.SignupResponse> com.attendly.api.controller.AuthController.signup(com.attendly.api.dto.SignupRequest) with 3 errors: [Field error in object 'signupRequest' on field 'name': rejected value []; codes [NotBlank.signupRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.name,name]; arguments []; default message [name]]; default message [이름은 필수입니다]] [Field error in object 'signupRequest' on field 'email': rejected value []; codes [NotBlank.signupRequest.email,NotBlank.email,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.email,email]; arguments []; default message [email]]; default message [이메일은 필수입니다]] [Field error in object 'signupRequest' on field 'password': rejected value []; codes [NotBlank.signupRequest.password,NotBlank.password,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [signupRequest.password,password]; arguments []; default message [password]]; default message [비밀번호는 필수입니다]] 
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:159)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.kt:27)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.config.RequestIdFilter.doFilter(RequestIdFilter.kt:34)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.attendly.api.controller.AuthControllerTest.회원가입 유효성 검증 실패 테스트(AuthControllerTest.kt:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#11
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #11#12
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#13
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #13#14
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Collection name=child of #13#15
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#16
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #16#17
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of authenticationManager bean#7#18
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#16) on AuthenticationManager(authenticationManager bean#7).authenticate(UsernamePasswordAuthenticationToken [Principal=test@example.com, Credentials=[PROTECTED], Authenticated=false, Details=null, Granted Authorities=[]])
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#13) on Authentication(#16).getPrincipal()
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering User(#11) on UserDetailsAdapter(#13).getUser()
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering access-token on JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8).generateToken(UserDetailsAdapter(#13))
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering refresh-token on JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8).generateRefreshToken(UserDetailsAdapter(#13))
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#11).getId()
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering 홍길동 on User(#11).getName()
2025-05-09 23:40:34 [Test worker] [e357e321-e71b-42f0-9cab-c8f7dfb7b700] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#11).getRole()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['accessToken']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['refreshToken']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#19
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#20
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #20#21
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=child of #20#22
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #20#23
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDateTime name=child of #20#24
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDateTime name=child of #20#25
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#26
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #26#27
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Collection name=child of #26#28
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering password123 on UserDetailsAdapter(#26).getPassword()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [ROLE_MEMBER] on UserDetailsAdapter(#26).getAuthorities()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering User(#20) on UserDetailsAdapter(#26).getUser()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#20).getId()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 사용자 on User(#20).getName()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on User(#20).getEmail()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 010-1234-5678 on User(#20).getPhoneNumber()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#20).getRole()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering Department(#19) on User(#20).getDepartment()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on Department(#19).getId()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering Department(#19) on User(#20).getDepartment()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 부서 on Department(#19).getName()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 1990-01-01 on User(#20).getBirthDate()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-09T23:40:34.258595 on User(#20).getCreatedAt()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-09T23:40:34.258595 on User(#20).getUpdatedAt()
2025-05-09 23:40:34 [Test worker] [abdf92c6-7e8c-4621-b98f-787aaabff144] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#26).getUsername()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#26) on UserDetailsAdapter(#26).toString()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['phoneNumber']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#6)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#7)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#8)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#9)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#29
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#30
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#31
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #30#32
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #29#33
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='리더', role=LEADER) on UserService(#30).getCurrentUser(Authentication(#31))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=010-1234-5678)]) on GbsMemberService(#29).getGbsMembers(1, 2025-05-09, User(id=1, name='리더', role=LEADER))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#34
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#35
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#36
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #35#37
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #34#38
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='어드민', role=ADMIN) on UserService(#35).getCurrentUser(Authentication(#36))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=010-1234-5678)]) on GbsMemberService(#34).getGbsMembers(1, 2025-05-09, User(id=1, name='어드민', role=ADMIN))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#39
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#40
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#41
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #40#42
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsResponse name=child of #39#43
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserService(#40).getCurrentUser(Authentication(#41))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsResponse(gbsId=1, gbsName=Test GBS, villageId=1, villageName=Test Village, leaderId=1, leaderName=홍길동, startDate=2025-05-09) on GbsMemberService(#39).getGbsForLeader(1)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#44
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#45
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#46
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #45#47
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #44#48
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='위임받은리더', role=LEADER) on UserService(#45).getCurrentUser(Authentication(#46))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=GBS1, memberCount=2, members=[GbsMemberResponse(id=3, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2023-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=4, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2023-01-01, phoneNumber=010-1234-5678)]) on GbsMemberService(#44).getGbsMembers(1, 2025-05-09, User(id=1, name='위임받은리더', role=LEADER))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#49
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#50
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#51
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #50#52
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsHistoryListResponse name=child of #49#53
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserService(#50).getCurrentUser(Authentication(#51))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsHistoryListResponse(leaderId=1, leaderName=홍길동, historyCount=2, histories=[LeaderGbsHistoryResponse(historyId=2, gbsId=2, gbsName=GBS2, villageId=1, villageName=1마을, startDate=2023-01-01, endDate=null, isActive=true, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2022-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2022-01-01, phoneNumber=010-1234-5678)]), LeaderGbsHistoryResponse(historyId=1, gbsId=1, gbsName=GBS1, villageId=1, villageName=1마을, startDate=2022-01-01, endDate=2022-12-31, isActive=false, members=[GbsMemberResponse(id=2, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2022-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=3, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2022-01-01, phoneNumber=010-1234-5678)])]) on GbsMemberService(#49).getLeaderGbsHistories(1, User(id=1, name='홍길동', role=LEADER))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberService name=#54
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#55
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#56
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #55#57
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderGbsHistoryListResponse name=child of #54#58
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=99, name='관리자', role=ADMIN) on UserService(#55).getCurrentUser(Authentication(#56))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderGbsHistoryListResponse(leaderId=1, leaderName=홍길동, historyCount=1, histories=[LeaderGbsHistoryResponse(historyId=1, gbsId=1, gbsName=GBS1, villageId=1, villageName=1마을, startDate=2022-01-01, endDate=2022-12-31, isActive=false, members=[])]) on GbsMemberService(#54).getLeaderGbsHistories(1, User(id=99, name='관리자', role=ADMIN))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#59
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#60
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of leaderDelegationService#59#61
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(#60) on LeaderDelegationService(leaderDelegationService#59).createDelegation(DelegationCreateRequest(delegatorId=1, delegateId=2, gbsGroupId=1, startDate=2025-05-10, endDate=2025-05-16))
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#60).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #60#62
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #60#62) on LeaderDelegation(#60).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on User(child of #60#62).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #60#62) on LeaderDelegation(#60).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on User(child of #60#62).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #60#63
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #60#63) on LeaderDelegation(#60).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on User(child of #60#63).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(child of #60#63) on LeaderDelegation(#60).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on User(child of #60#63).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #60#64
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(child of #60#64) on LeaderDelegation(#60).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on GbsGroup(child of #60#64).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(child of #60#64) on LeaderDelegation(#60).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on GbsGroup(child of #60#64).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #60#65
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LocalDate(child of #60#65) on LeaderDelegation(#60).getStartDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #60#66
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LocalDate(child of #60#66) on LeaderDelegation(#60).getEndDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#65).getYear()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#65).getMonthValue()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#65).getDayOfMonth()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#66).getYear()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#66).getMonthValue()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on LocalDate(child of #60#66).getDayOfMonth()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#67
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#67#68
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationService(leaderDelegationService#67).findActiveDelegations(1, 2025-05-09)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#69
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#70
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#71
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=#72
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#73
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #73#74
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #73#75
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #73#76
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #73#77
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #73#78
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#69#79
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(#73)] on LeaderDelegationService(leaderDelegationService#69).findActiveDelegations(2, 2025-05-09)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#73).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#70) on LeaderDelegation(#73).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#70).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#70) on LeaderDelegation(#73).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 김위임자 on User(#70).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#71) on LeaderDelegation(#73).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on User(#71).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#71) on LeaderDelegation(#73).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 이수임자 on User(#71).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#72) on LeaderDelegation(#73).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on GbsGroup(#72).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#72) on LeaderDelegation(#73).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 소그룹 on GbsGroup(#72).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-08 on LeaderDelegation(#73).getStartDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-14 on LeaderDelegation(#73).getEndDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationService name=leaderDelegationService#80
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.LeaderDelegationController:
	{GET [/api/delegations/active]}: getActiveDelegations(long,LocalDate)
	{POST [/api/delegations]}: createDelegation(DelegationCreateRequest)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#81
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#82
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=#83
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#84
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #84#85
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #84#86
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #84#87
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #84#88
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LocalDate name=child of #84#89
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationService#80#90
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(#84)] on LeaderDelegationService(leaderDelegationService#80).findActiveDelegations(2, 2025-05-09)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on LeaderDelegation(#84).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#81) on LeaderDelegation(#84).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#81).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#81) on LeaderDelegation(#84).getDelegator()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 김위임자 on User(#81).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#82) on LeaderDelegation(#84).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on User(#82).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#82) on LeaderDelegation(#84).getDelegatee()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 이수임자 on User(#82).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#83) on LeaderDelegation(#84).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on GbsGroup(#83).getId()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(#83) on LeaderDelegation(#84).getGbsGroup()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 소그룹 on GbsGroup(#83).getName()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-08 on LeaderDelegation(#84).getStartDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2025-05-14 on LeaderDelegation(#84).getEndDate()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegatorName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegateeId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['delegateeName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['gbsGroupId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['gbsGroupName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['startDate']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]['endDate']
2025-05-09 23:40:34 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:34 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - Starting UserControllerTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.a.a.controller.UserControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:34 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=com.attendly.service.UserService#0 bean#91
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#92
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#93
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#94
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.UserController:
	{POST [/api/users/by-roles]}: getUsersByRoles(UserListByRolesRequest)
	{GET [/api/users/my-village]}: getCurrentUserVillage(Authentication)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG com.attendly.config.RequestIdFilter - Filter 'requestIdFilter' configured for use
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-09 23:40:34 [Test worker] [NONE] INFO  c.a.a.controller.UserControllerTest - Started UserControllerTest in 0.184 seconds (process running for 6.939)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#91#95
2025-05-09 23:40:34 [Test worker] [c50da36a-1748-4191-a95d-98d518c218e6] DEBUG i.m.i.r.states.AnsweringState - Answering [UserResponse(id=1, name=홍길동, email=hong@example.com, phoneNumber=010-1234-5678, role=LEADER, departmentId=1, departmentName=대학부, birthDate=1990-01-01, createdAt=2025-05-09T23:40:34.920409, updatedAt=2025-05-09T23:40:34.920416), UserResponse(id=2, name=김철수, email=kim@example.com, phoneNumber=010-2345-6789, role=MEMBER, departmentId=1, departmentName=대학부, birthDate=1995-05-05, createdAt=2025-05-09T23:40:34.920425, updatedAt=2025-05-09T23:40:34.920426)] on UserService(com.attendly.service.UserService#0 bean#91).getUsersByRoles(UserListByRolesRequest(roles=[LEADER, MEMBER]))
2025-05-09 23:40:34 [Test worker] [c50da36a-1748-4191-a95d-98d518c218e6] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/users/by-roles - 200 (8 ms)
2025-05-09 23:40:34 [Test worker] [c50da36a-1748-4191-a95d-98d518c218e6] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"c50da36a-1748-4191-a95d-98d518c218e6","apiPath":"/api/users/by-roles","method":"POST","status":200,"duration":8,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"29"},"responseHeaders":{"X-Request-ID":"c50da36a-1748-4191-a95d-98d518c218e6","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['id']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#91#96
2025-05-09 23:40:34 [Test worker] [5d6d951e-4309-4ab6-976d-b130d3bb6db5] DEBUG i.m.i.r.states.AnsweringState - Answering [UserResponse(id=1, name=Leader User, email=leader@example.com, phoneNumber=010-1234-5678, role=LEADER, departmentId=1, departmentName=IT 부서, birthDate=1990-01-01, createdAt=2025-05-09T23:40:34.942951, updatedAt=2025-05-09T23:40:34.942951), UserResponse(id=2, name=Member User, email=member@example.com, phoneNumber=010-9876-5432, role=MEMBER, departmentId=1, departmentName=IT 부서, birthDate=1995-05-05, createdAt=2025-05-09T23:40:34.942951, updatedAt=2025-05-09T23:40:34.942951)] on UserService(com.attendly.service.UserService#0 bean#91).getUsersByRoles(UserListByRolesRequest(roles=[LEADER, MEMBER]))
2025-05-09 23:40:34 [Test worker] [5d6d951e-4309-4ab6-976d-b130d3bb6db5] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/users/by-roles - 200 (1 ms)
2025-05-09 23:40:34 [Test worker] [5d6d951e-4309-4ab6-976d-b130d3bb6db5] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"5d6d951e-4309-4ab6-976d-b130d3bb6db5","apiPath":"/api/users/by-roles","method":"POST","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"29"},"responseHeaders":{"X-Request-ID":"5d6d951e-4309-4ab6-976d-b130d3bb6db5","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'].length()
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][0]['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['name']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['users'][1]['role']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#91#97
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserVillageResponse name=child of com.attendly.service.UserService#0 bean#91#98
2025-05-09 23:40:34 [Test worker] [78598fd9-f2b4-4d74-82d1-527d29d6cf30] DEBUG i.m.i.r.states.AnsweringState - Answering UserVillageResponse(userId=1, userName=홍길동, villageId=10, villageName=1마을, departmentId=20, departmentName=대학부, isVillageLeader=false) on UserService(com.attendly.service.UserService#0 bean#91).getCurrentUserVillage(UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_MEMBER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_MEMBER]])
2025-05-09 23:40:34 [Test worker] [78598fd9-f2b4-4d74-82d1-527d29d6cf30] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/users/my-village - 200 (4 ms)
2025-05-09 23:40:34 [Test worker] [78598fd9-f2b4-4d74-82d1-527d29d6cf30] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"78598fd9-f2b4-4d74-82d1-527d29d6cf30","apiPath":"/api/users/my-village","method":"GET","status":200,"duration":4,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"78598fd9-f2b4-4d74-82d1-527d29d6cf30","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentId']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentName']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['isVillageLeader']
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:34 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.UserService#0 bean#91#99
2025-05-09 23:40:35 [Test worker] [1d0f762e-d4a5-489e-b600-610127f95ae5] ERROR c.a.exception.GlobalExceptionHandler - MethodArgumentNotValidException: {}
org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.attendly.api.dto.UserListByRolesResponse> com.attendly.api.controller.UserController.getUsersByRoles(com.attendly.api.dto.UserListByRolesRequest): [Field error in object 'userListByRolesRequest' on field 'roles': rejected value [[]]; codes [NotEmpty.userListByRolesRequest.roles,NotEmpty.roles,NotEmpty.java.util.List,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userListByRolesRequest.roles,roles]; arguments []; default message [roles]]; default message [최소 하나 이상의 역할이 필요합니다]] 
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:159)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.kt:27)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at com.attendly.config.RequestIdFilter.doFilter(RequestIdFilter.kt:34)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.attendly.api.controller.UserControllerTest.should return 400 when request is invalid(UserControllerTest.kt:129)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:40:35 [Test worker] [1d0f762e-d4a5-489e-b600-610127f95ae5] WARN  c.a.a.interceptor.ApiLogInterceptor - POST /api/users/by-roles - 400 (4 ms)
2025-05-09 23:40:35 [Test worker] [1d0f762e-d4a5-489e-b600-610127f95ae5] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"1d0f762e-d4a5-489e-b600-610127f95ae5","apiPath":"/api/users/by-roles","method":"POST","status":400,"duration":4,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"12"},"responseHeaders":{"X-Request-ID":"1d0f762e-d4a5-489e-b600-610127f95ae5","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserService(com.attendly.service.UserService#0 bean#91)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#92)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#93)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#94)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#100
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#101
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageGbsInfoResponse name=child of organizationService#101#102
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.VillageLeaderController:
	{GET [/api/village-leader/{villageId}/gbs]}: getVillageGbsInfo(long,LocalDate)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageGbsInfoResponse(villageId=1, villageName=1마을, gbsCount=2, totalMemberCount=2, gbsList=[GbsInfo(gbsId=1, gbsName=1GBS, leaderId=3, leaderName=홍길동, memberCount=2, members=[GbsMemberResponse(id=1, name=김조원, email=member1@example.com, birthDate=null, joinDate=2023-01-01, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=이조원, email=member2@example.com, birthDate=null, joinDate=2023-01-01, phoneNumber=010-2345-6789)]), GbsInfo(gbsId=2, gbsName=2GBS, leaderId=4, leaderName=김리더, memberCount=0, members=[])]) on OrganizationService(organizationService#101).getVillageGbsInfo(1, 2025-05-09)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageId']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageId']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageName']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsCount']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['totalMemberCount']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'].length()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][0]['gbsId']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][0]['gbsName']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][0]['leaderName']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][0]['memberCount']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][0]['members'].length()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][1]['gbsId']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['gbsList'][1]['gbsName']
2025-05-09 23:40:35 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - Starting AdminLogControllerTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.a.c.admin.AdminLogControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogService name=com.attendly.service.SystemLogService#0 bean#103
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#104
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#105
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.a.AdminLogController:
	{GET [/api/admin/logs/levels]}: getLogLevels()
	{GET [/api/admin/logs/{id}]}: getLogById(long)
	{GET [/api/admin/logs]}: getLogs(String,String,LocalDateTime,LocalDateTime,Long,String,int,int,String)
	{GET [/api/admin/logs/categories]}: getLogCategories()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=#106
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 150260518 on AuthenticationManager(#106).hashCode()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG com.attendly.config.RequestIdFilter - Filter 'requestIdFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.admin.AdminLogControllerTest - Started AdminLogControllerTest in 0.198 seconds (process running for 7.347)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#107
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#108
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#109
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#110
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.JvmStaticMockFactory - Creating object mockk for Companion
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#111
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#112
2025-05-09 23:40:35 [Test worker] [8591cf3f-5ba7-457a-b6ec-05ec047b6103] DEBUG i.m.i.r.states.AnsweringState - Answering null on SystemLogService(com.attendly.service.SystemLogService#0 bean#103).getLogById(999)
2025-05-09 23:40:35 [Test worker] [8591cf3f-5ba7-457a-b6ec-05ec047b6103] WARN  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/999 - 404 (4 ms)
2025-05-09 23:40:35 [Test worker] [8591cf3f-5ba7-457a-b6ec-05ec047b6103] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"8591cf3f-5ba7-457a-b6ec-05ec047b6103","apiPath":"/api/admin/logs/999","method":"GET","status":404,"duration":4,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"8591cf3f-5ba7-457a-b6ec-05ec047b6103"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#113
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#114
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#115
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#116
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#117
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#118
2025-05-09 23:40:35 [Test worker] [0b47e80d-2a1f-40b7-83d5-46536a185bc7] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/levels - 200 (2 ms)
2025-05-09 23:40:35 [Test worker] [0b47e80d-2a1f-40b7-83d5-46536a185bc7] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"0b47e80d-2a1f-40b7-83d5-46536a185bc7","apiPath":"/api/admin/logs/levels","method":"GET","status":200,"duration":2,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"0b47e80d-2a1f-40b7-83d5-46536a185bc7","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[1]
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[2]
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#119
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#120
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#121
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#122
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#123
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#124
2025-05-09 23:40:35 [Test worker] [b25d37bc-f9c1-454e-988d-65f33fee50f5] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.domain.entity.SystemLog@c05aae9 on SystemLogService(com.attendly.service.SystemLogService#0 bean#103).getLogById(1)
2025-05-09 23:40:35 [Test worker] [b25d37bc-f9c1-454e-988d-65f33fee50f5] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-08T23:40:35.458991, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@c05aae9)
2025-05-09 23:40:35 [Test worker] [b25d37bc-f9c1-454e-988d-65f33fee50f5] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/1 - 200 (1 ms)
2025-05-09 23:40:35 [Test worker] [b25d37bc-f9c1-454e-988d-65f33fee50f5] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"b25d37bc-f9c1-454e-988d-65f33fee50f5","apiPath":"/api/admin/logs/1","method":"GET","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"b25d37bc-f9c1-454e-988d-65f33fee50f5","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['level']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#125
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#126
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#127
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#128
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#129
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#130
2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogService(com.attendly.service.SystemLogService#0 bean#103).getLogs(null, null, null, null, null, null, Page request [number: 0, size 20, sort: timestamp: DESC])
2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-08T23:40:35.465781, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@6aa2754e)
2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=2, level=ERROR, category=SECURITY, message=테스트 로그 메시지 2, additionalInfo=null, timestamp=2025-05-09T23:40:35.465781, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@7f6738c4)
2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs - 200 (39 ms)
2025-05-09 23:40:35 [Test worker] [9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78","apiPath":"/api/admin/logs","method":"GET","status":200,"duration":39,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"9b40bd7e-8f0a-4be3-b9c4-04b13d9fda78","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'].length()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['level']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['level']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#131
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#132
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#133
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#134
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#135
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#136
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#137
2025-05-09 23:40:35 [Test worker] [6e0930a9-de99-4450-a4cf-3cf848ed8feb] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogService(com.attendly.service.SystemLogService#0 bean#103).getLogs(ERROR, null, null, null, null, null, Page request [number: 0, size 20, sort: timestamp: DESC])
2025-05-09 23:40:35 [Test worker] [6e0930a9-de99-4450-a4cf-3cf848ed8feb] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=1, level=INFO, category=APPLICATION, message=테스트 로그 메시지 1, additionalInfo=null, timestamp=2025-05-08T23:40:35.513846, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@63c69b2a)
2025-05-09 23:40:35 [Test worker] [6e0930a9-de99-4450-a4cf-3cf848ed8feb] DEBUG i.m.i.r.states.AnsweringState - Answering SystemLogResponseDto(id=2, level=ERROR, category=SECURITY, message=테스트 로그 메시지 2, additionalInfo=null, timestamp=2025-05-09T23:40:35.513846, ipAddress=127.0.0.1, userId=null, userAgent=null, serverInstance=null) on Companion(object Companion).from(com.attendly.domain.entity.SystemLog@1483fa8b)
2025-05-09 23:40:35 [Test worker] [6e0930a9-de99-4450-a4cf-3cf848ed8feb] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs - 200 (1 ms)
2025-05-09 23:40:35 [Test worker] [6e0930a9-de99-4450-a4cf-3cf848ed8feb] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"6e0930a9-de99-4450-a4cf-3cf848ed8feb","apiPath":"/api/admin/logs","method":"GET","status":200,"duration":1,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"6e0930a9-de99-4450-a4cf-3cf848ed8feb","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#138
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#139
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#140
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#141
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#142
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#143
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#144
2025-05-09 23:40:35 [Test worker] [6d67f448-c9cb-4908-b519-d6bfb55b4b24] DEBUG i.m.i.r.states.AnsweringState - Answering [APPLICATION, SECURITY] on SystemLogService(com.attendly.service.SystemLogService#0 bean#103).getLogCategories()
2025-05-09 23:40:35 [Test worker] [6d67f448-c9cb-4908-b519-d6bfb55b4b24] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/logs/categories - 200 (0 ms)
2025-05-09 23:40:35 [Test worker] [6d67f448-c9cb-4908-b519-d6bfb55b4b24] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"6d67f448-c9cb-4908-b519-d6bfb55b4b24","apiPath":"/api/admin/logs/categories","method":"GET","status":200,"duration":0,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8"},"responseHeaders":{"X-Request-ID":"6d67f448-c9cb-4908-b519-d6bfb55b4b24","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[0]
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $[1]
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.SystemLogService#0 bean#103#145
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#146
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of com.attendly.service.SystemLogService#0 bean#103#147
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of com.attendly.service.SystemLogService#0 bean#103#148
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [Companion(object Companion)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#149
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogResponseDto name=child of object Companion#150
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#103)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#104)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#105)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - Starting AdminUserControllerTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.a.c.a.AdminUserControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AdminUserService name=com.attendly.service.AdminUserService#0 bean#151
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#152
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#153
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#154
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogService name=com.attendly.service.SystemLogService#0 bean#155
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.a.AdminUserController:
	{GET [/api/admin/users/{userId}]}: getUser(long)
	{POST [/api/admin/users/bulk]}: bulkCreateUsers(UserBulkCreateRequest)
	{POST [/api/admin/users]}: createUser(UserCreateRequest)
	{PUT [/api/admin/users/{userId}]}: updateUser(long,UserUpdateRequest)
	{POST [/api/admin/users/{userId}/reset-password]}: resetPassword(long,UserPasswordResetRequest)
	{DELETE [/api/admin/users/{userId}]}: deleteUser(long)
	{GET [/api/admin/users]}: getAllUsers(Pageable)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG com.attendly.config.RequestIdFilter - Filter 'requestIdFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-09 23:40:35 [Test worker] [NONE] INFO  c.a.a.c.a.AdminUserControllerTest - Started AdminUserControllerTest in 0.189 seconds (process running for 7.752)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of com.attendly.service.AdminUserService#0 bean#151#156
2025-05-09 23:40:35 [Test worker] [3dc1fc2c-7667-477b-a6b9-999e7399dc18] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).deleteUser(1)
2025-05-09 23:40:35 [Test worker] [3dc1fc2c-7667-477b-a6b9-999e7399dc18] INFO  c.a.a.interceptor.ApiLogInterceptor - DELETE /api/admin/users/1 - 204 (2 ms)
2025-05-09 23:40:35 [Test worker] [3dc1fc2c-7667-477b-a6b9-999e7399dc18] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"3dc1fc2c-7667-477b-a6b9-999e7399dc18","apiPath":"/api/admin/users/1","method":"DELETE","status":204,"duration":2,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"3dc1fc2c-7667-477b-a6b9-999e7399dc18"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of com.attendly.service.AdminUserService#0 bean#151#157
2025-05-09 23:40:35 [Test worker] [28ff2e63-54b3-431a-8276-b03873e294c0] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).resetPassword(1, UserPasswordResetRequest(newPassword=NewPassword123!))
2025-05-09 23:40:35 [Test worker] [28ff2e63-54b3-431a-8276-b03873e294c0] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users/1/reset-password - 200 (3 ms)
2025-05-09 23:40:35 [Test worker] [28ff2e63-54b3-431a-8276-b03873e294c0] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"28ff2e63-54b3-431a-8276-b03873e294c0","apiPath":"/api/admin/users/1/reset-password","method":"POST","status":200,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"33"},"responseHeaders":{"X-Request-ID":"28ff2e63-54b3-431a-8276-b03873e294c0"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#151#158
2025-05-09 23:40:35 [Test worker] [a10be9ba-2b10-4f74-a6af-4bcd6eabe68c] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동, email=hong@example.com, phoneNumber=010-1234-5678, role=LEADER, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-09T23:40:35.770640, updatedAt=2025-05-09T23:40:35.770645) on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).getUser(1)
2025-05-09 23:40:35 [Test worker] [a10be9ba-2b10-4f74-a6af-4bcd6eabe68c] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/users/1 - 200 (3 ms)
2025-05-09 23:40:35 [Test worker] [a10be9ba-2b10-4f74-a6af-4bcd6eabe68c] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"a10be9ba-2b10-4f74-a6af-4bcd6eabe68c","apiPath":"/api/admin/users/1","method":"GET","status":200,"duration":3,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"a10be9ba-2b10-4f74-a6af-4bcd6eabe68c","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['phoneNumber']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserBulkCreateResponse name=child of com.attendly.service.AdminUserService#0 bean#151#159
2025-05-09 23:40:35 [Test worker] [f7840198-eab4-49bb-8f78-08265953989a] DEBUG i.m.i.r.states.AnsweringState - Answering UserBulkCreateResponse(createdCount=2, failedCount=0, failedEmails=[]) on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).bulkCreateUsers(UserBulkCreateRequest(users=[UserCreateRequest(name=홍길동, email=hong@example.com, phoneNumber=null, password=Password123!, role=LEADER, birthDate=null, departmentId=1), UserCreateRequest(name=김철수, email=kim@example.com, phoneNumber=null, password=Password123!, role=MEMBER, birthDate=null, departmentId=1)]))
2025-05-09 23:40:35 [Test worker] [f7840198-eab4-49bb-8f78-08265953989a] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users/bulk - 201 (7 ms)
2025-05-09 23:40:35 [Test worker] [f7840198-eab4-49bb-8f78-08265953989a] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"f7840198-eab4-49bb-8f78-08265953989a","apiPath":"/api/admin/users/bulk","method":"POST","status":201,"duration":7,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"296"},"responseHeaders":{"X-Request-ID":"f7840198-eab4-49bb-8f78-08265953989a","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['createdCount']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['failedCount']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['failedEmails'].length()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of com.attendly.service.AdminUserService#0 bean#151#160
2025-05-09 23:40:35 [Test worker] [03ba9924-044f-4a4b-92ae-f246236eccb3] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.api.dto.UserResponse instances on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).getAllUsers(Page request [number: 0, size 10, sort: id: DESC])
2025-05-09 23:40:35 [Test worker] [03ba9924-044f-4a4b-92ae-f246236eccb3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-05-09 23:40:35 [Test worker] [03ba9924-044f-4a4b-92ae-f246236eccb3] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/users - 200 (5 ms)
2025-05-09 23:40:35 [Test worker] [03ba9924-044f-4a4b-92ae-f246236eccb3] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"03ba9924-044f-4a4b-92ae-f246236eccb3","apiPath":"/api/admin/users","method":"GET","status":200,"duration":5,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"03ba9924-044f-4a4b-92ae-f246236eccb3","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'].length()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['name']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['email']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][0]['phoneNumber']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['name']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['email']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['content'][1]['phoneNumber']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['totalElements']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#151#161
2025-05-09 23:40:35 [Test worker] [e426bd9d-fb30-4431-9767-96ebf4d62e57] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동, email=hong@example.com, phoneNumber=010-1234-5678, role=LEADER, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-09T23:40:35.855081, updatedAt=2025-05-09T23:40:35.855083) on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).createUser(UserCreateRequest(name=홍길동, email=hong@example.com, phoneNumber=null, password=Password123!, role=LEADER, birthDate=null, departmentId=1))
2025-05-09 23:40:35 [Test worker] [e426bd9d-fb30-4431-9767-96ebf4d62e57] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/users - 201 (3 ms)
2025-05-09 23:40:35 [Test worker] [e426bd9d-fb30-4431-9767-96ebf4d62e57] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"e426bd9d-fb30-4431-9767-96ebf4d62e57","apiPath":"/api/admin/users","method":"POST","status":201,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"142"},"responseHeaders":{"X-Request-ID":"e426bd9d-fb30-4431-9767-96ebf4d62e57","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['phoneNumber']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentId']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['departmentName']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserResponse name=child of com.attendly.service.AdminUserService#0 bean#151#162
2025-05-09 23:40:35 [Test worker] [3cfffc39-3d79-4c46-a6b0-9493d7dbd4eb] DEBUG i.m.i.r.states.AnsweringState - Answering UserResponse(id=1, name=홍길동(수정), email=hong_updated@example.com, phoneNumber=010-1234-5678, role=ADMIN, departmentId=1, departmentName=청년부, birthDate=null, createdAt=2025-05-09T23:40:35.863402, updatedAt=2025-05-09T23:40:35.863404) on AdminUserService(com.attendly.service.AdminUserService#0 bean#151).updateUser(1, UserUpdateRequest(name=홍길동(수정), email=hong_updated@example.com, phoneNumber=null, birthDate=null, role=ADMIN, departmentId=null))
2025-05-09 23:40:35 [Test worker] [3cfffc39-3d79-4c46-a6b0-9493d7dbd4eb] INFO  c.a.a.interceptor.ApiLogInterceptor - PUT /api/admin/users/1 - 200 (3 ms)
2025-05-09 23:40:35 [Test worker] [3cfffc39-3d79-4c46-a6b0-9493d7dbd4eb] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"3cfffc39-3d79-4c46-a6b0-9493d7dbd4eb","apiPath":"/api/admin/users/1","method":"PUT","status":200,"duration":3,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"134"},"responseHeaders":{"X-Request-ID":"3cfffc39-3d79-4c46-a6b0-9493d7dbd4eb","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['id']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['name']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['email']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['phoneNumber']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['role']
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminUserService(com.attendly.service.AdminUserService#0 bean#151)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#152)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#153)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#154)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [SystemLogService(com.attendly.service.SystemLogService#0 bean#155)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:40:35 [Test worker] [e513343e-243c-4c37-a95f-a560d2f02e86] INFO  c.a.a.interceptor.ApiLogInterceptor -   - 200 (0 ms)
2025-05-09 23:40:35 [Test worker] [e513343e-243c-4c37-a95f-a560d2f02e86] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"e513343e-243c-4c37-a95f-a560d2f02e86","apiPath":"","method":"","status":200,"duration":0,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"e513343e-243c-4c37-a95f-a560d2f02e86"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:40:35 [Test worker] [98a99fd0-2ae5-4044-ae4d-371a7794a821] WARN  c.a.a.interceptor.ApiLogInterceptor - GET /api/users/999 - 404 (0 ms)
2025-05-09 23:40:35 [Test worker] [98a99fd0-2ae5-4044-ae4d-371a7794a821] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"98a99fd0-2ae5-4044-ae4d-371a7794a821","apiPath":"/api/users/999","method":"GET","status":404,"duration":0,"requestHeaders":{},"responseHeaders":{"Content-Type":"application/json","X-Request-ID":"98a99fd0-2ae5-4044-ae4d-371a7794a821"},"requestBody":null,"responseBody":"{\"error\":\"User not found\",\"status\":404}","queryParams":null}
2025-05-09 23:40:35 [Test worker] [dea3ccb7-516b-4856-92a3-aa3e187d00e9] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/users - 201 (0 ms)
2025-05-09 23:40:35 [Test worker] [dea3ccb7-516b-4856-92a3-aa3e187d00e9] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"dea3ccb7-516b-4856-92a3-aa3e187d00e9","apiPath":"/api/users","method":"POST","status":201,"duration":0,"requestHeaders":{"Content-Type":"application/json"},"responseHeaders":{"Content-Type":"application/json","X-Request-ID":"dea3ccb7-516b-4856-92a3-aa3e187d00e9"},"requestBody":null,"responseBody":"{\"id\":1,\"name\":\"홍길동\",\"email\":\"hong@example.com\"}","queryParams":null}
2025-05-09 23:40:35 [Test worker] [ac2ba1a8-148c-49bd-841a-6714740bca65] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ProceedingJoinPoint name=#163
2025-05-09 23:40:35 [Test worker] [ac2ba1a8-148c-49bd-841a-6714740bca65] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=#164
2025-05-09 23:40:35 [Test worker] [ac2ba1a8-148c-49bd-841a-6714740bca65] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=child of #163#165
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #163#166
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#164) on ProceedingJoinPoint(#163).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.example.TestClass on Signature(#164).getDeclaringTypeName()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#164) on ProceedingJoinPoint(#163).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering testMethod on Signature(#164).getName()
2025-05-09 23:40:35 [Test worker] [9d62f336-14fe-4644-bc78-3eac81fc5eb7] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행: com.example.TestClass.testMethod (requestId: 9d62f336-14fe-4644-bc78-3eac81fc5eb7)
2025-05-09 23:40:35 [Test worker] [9d62f336-14fe-4644-bc78-3eac81fc5eb7] DEBUG i.m.i.r.states.AnsweringState - Throwing java.lang.RuntimeException: Test exception on ProceedingJoinPoint(#163).proceed()
2025-05-09 23:40:35 [Test worker] [9d62f336-14fe-4644-bc78-3eac81fc5eb7] ERROR com.attendly.aspect.MdcAspect - Async 메소드 실행 중 오류 발생: com.example.TestClass.testMethod (requestId: 9d62f336-14fe-4644-bc78-3eac81fc5eb7)
java.lang.RuntimeException: Test exception
	at com.attendly.aspect.MdcAspectTest.예외 발생 시에도 MDC에서 requestId를 제거한다(MdcAspectTest.kt:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(Unknown Source)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:40:35 [Test worker] [9d62f336-14fe-4644-bc78-3eac81fc5eb7] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행 완료: com.example.TestClass.testMethod (requestId: 9d62f336-14fe-4644-bc78-3eac81fc5eb7)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ProceedingJoinPoint name=#167
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=#168
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=child of #167#169
2025-05-09 23:40:35 [Test worker] [original-request-id] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #167#170
2025-05-09 23:40:35 [Test worker] [original-request-id] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#168) on ProceedingJoinPoint(#167).getSignature()
2025-05-09 23:40:35 [Test worker] [original-request-id] DEBUG i.m.i.r.states.AnsweringState - Answering com.example.TestClass on Signature(#168).getDeclaringTypeName()
2025-05-09 23:40:35 [Test worker] [original-request-id] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#168) on ProceedingJoinPoint(#167).getSignature()
2025-05-09 23:40:35 [Test worker] [original-request-id] DEBUG i.m.i.r.states.AnsweringState - Answering testMethod on Signature(#168).getName()
2025-05-09 23:40:35 [Test worker] [e360473c-ede5-478f-a4b0-09686939c6ec] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행: com.example.TestClass.testMethod (requestId: e360473c-ede5-478f-a4b0-09686939c6ec)
2025-05-09 23:40:35 [Test worker] [e360473c-ede5-478f-a4b0-09686939c6ec] DEBUG i.m.i.r.states.AnsweringState - Answering test result on ProceedingJoinPoint(#167).proceed()
2025-05-09 23:40:35 [Test worker] [e360473c-ede5-478f-a4b0-09686939c6ec] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행 완료: com.example.TestClass.testMethod (requestId: e360473c-ede5-478f-a4b0-09686939c6ec)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ProceedingJoinPoint name=#171
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=#172
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=child of #171#173
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #171#174
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#172) on ProceedingJoinPoint(#171).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.example.TestClass on Signature(#172).getDeclaringTypeName()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#172) on ProceedingJoinPoint(#171).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering testMethod on Signature(#172).getName()
2025-05-09 23:40:35 [Test worker] [c8882af6-e8bf-47aa-a53b-72ee28f2687c] DEBUG com.attendly.aspect.MdcAspect - Scheduled 메소드 실행: com.example.TestClass.testMethod (requestId: c8882af6-e8bf-47aa-a53b-72ee28f2687c)
2025-05-09 23:40:35 [Test worker] [c8882af6-e8bf-47aa-a53b-72ee28f2687c] DEBUG i.m.i.r.states.AnsweringState - Answering test result on ProceedingJoinPoint(#171).proceed()
2025-05-09 23:40:35 [Test worker] [c8882af6-e8bf-47aa-a53b-72ee28f2687c] DEBUG com.attendly.aspect.MdcAspect - Scheduled 메소드 실행 완료: com.example.TestClass.testMethod (requestId: c8882af6-e8bf-47aa-a53b-72ee28f2687c)
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ProceedingJoinPoint name=#175
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=#176
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Signature name=child of #175#177
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #175#178
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#176) on ProceedingJoinPoint(#175).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.example.TestClass on Signature(#176).getDeclaringTypeName()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Signature(#176) on ProceedingJoinPoint(#175).getSignature()
2025-05-09 23:40:35 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering testMethod on Signature(#176).getName()
2025-05-09 23:40:35 [Test worker] [4e60a0bc-5b50-474f-89b7-26d1320582ed] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행: com.example.TestClass.testMethod (requestId: 4e60a0bc-5b50-474f-89b7-26d1320582ed)
2025-05-09 23:40:35 [Test worker] [4e60a0bc-5b50-474f-89b7-26d1320582ed] DEBUG i.m.i.r.states.AnsweringState - Answering test result on ProceedingJoinPoint(#175).proceed()
2025-05-09 23:40:35 [Test worker] [4e60a0bc-5b50-474f-89b7-26d1320582ed] DEBUG com.attendly.aspect.MdcAspect - Async 메소드 실행 완료: com.example.TestClass.testMethod (requestId: 4e60a0bc-5b50-474f-89b7-26d1320582ed)
2025-05-09 23:40:36 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.AttendanceRepositoryCustomTest - Starting AttendanceRepositoryCustomTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG c.a.d.r.AttendanceRepositoryCustomTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.AttendanceRepositoryCustomTest - The following 1 profile is active: "test"
2025-05-09 23:40:36 [Test worker] [NONE] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        phone_number varchar(20),
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.AttendanceRepositoryCustomTest - Started AttendanceRepositoryCustomTest in 0.276 seconds (process running for 8.293)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        count(a1_0.id) 
    from
        attendance a1_0 
    where
        a1_0.gbs_id in (?, ?) 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        a1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    join
        users m1_0 
            on m1_0.id=a1_0.member_id 
    join
        gbs_group gg1_0 
            on gg1_0.id=a1_0.gbs_id 
    where
        gg1_0.village_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.member_id=? 
        and a1_0.week_start between ? and ?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.gbs_id=? 
        and a1_0.week_start=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        attendance
        (created_at, created_by, gbs_id, member_id, ministry, qt_count, updated_at, week_start, worship, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.gbs_id,
        a1_0.member_id,
        a1_0.ministry,
        a1_0.qt_count,
        a1_0.updated_at,
        a1_0.week_start,
        a1_0.worship 
    from
        attendance a1_0 
    where
        a1_0.member_id=? 
        and a1_0.week_start between ? and ?
2025-05-09 23:40:36 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - Starting GbsGroupRepositoryCustomTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG c.a.d.r.GbsGroupRepositoryCustomTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - The following 1 profile is active: "test"
2025-05-09 23:40:36 [Test worker] [NONE] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        phone_number varchar(20),
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-09 23:40:36 [Test worker] [NONE] INFO  c.a.d.r.GbsGroupRepositoryCustomTest - Started GbsGroupRepositoryCustomTest in 0.239 seconds (process running for 8.751)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at 
    from
        gbs_group gg1_0 
    join
        village v1_0 
            on v1_0.id=gg1_0.village_id 
    where
        v1_0.id=? 
        and gg1_0.term_start_dt<=? 
        and gg1_0.term_end_dt>=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id,
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at 
    from
        gbs_group gg1_0 
    join
        village v1_0 
            on v1_0.id=gg1_0.village_id 
    where
        v1_0.id=? 
        and gg1_0.term_start_dt<=? 
        and gg1_0.term_end_dt>=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.village_id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        l1_0.id,
        l1_0.birth_date,
        l1_0.created_at,
        l1_0.department_id,
        l1_0.email,
        l1_0.name,
        l1_0.password,
        l1_0.phone_number,
        l1_0.role,
        l1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    join
        users l1_0 
            on l1_0.id=glh1_0.leader_id 
    where
        glh1_0.gbs_id=? 
        and glh1_0.end_dt is null
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village_leader vl1_0 
    where
        vl1_0.user_id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        glh1_0.id,
        glh1_0.created_at,
        glh1_0.end_dt,
        glh1_0.gbs_id,
        glh1_0.leader_id,
        glh1_0.start_dt,
        glh1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    where
        glh1_0.gbs_id=? 
        and glh1_0.leader_id=? 
        and glh1_0.end_dt is null
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village v1_0 
    left join
        village_leader vl1_0 
            on v1_0.id=vl1_0.village_id 
    where
        v1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        users u1_0 
    left join
        village_leader vl1_0 
            on u1_0.id=vl1_0.user_id 
    where
        u1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_leader_history
        (created_at, end_dt, gbs_id, leader_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        glh1_0.id,
        glh1_0.created_at,
        glh1_0.end_dt,
        glh1_0.gbs_id,
        glh1_0.leader_id,
        glh1_0.start_dt,
        glh1_0.updated_at 
    from
        gbs_leader_history glh1_0 
    where
        glh1_0.gbs_id=? 
        and glh1_0.leader_id=? 
        and glh1_0.end_dt is null
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gg1_0.id,
        gg1_0.created_at,
        gg1_0.name,
        gg1_0.term_end_dt,
        gg1_0.term_start_dt,
        gg1_0.updated_at,
        gg1_0.village_id 
    from
        gbs_group gg1_0 
    where
        gg1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        v1_0.id,
        v1_0.created_at,
        v1_0.department_id,
        v1_0.name,
        v1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        village v1_0 
    left join
        village_leader vl1_0 
            on v1_0.id=vl1_0.village_id 
    where
        v1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        d1_0.id,
        d1_0.created_at,
        d1_0.name,
        d1_0.updated_at 
    from
        department d1_0 
    where
        d1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.birth_date,
        u1_0.created_at,
        u1_0.department_id,
        u1_0.email,
        u1_0.name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.role,
        u1_0.updated_at,
        vl1_0.user_id,
        vl1_0.village_id,
        vl1_0.created_at,
        vl1_0.end_dt,
        vl1_0.start_dt,
        vl1_0.updated_at 
    from
        users u1_0 
    left join
        village_leader vl1_0 
            on u1_0.id=vl1_0.user_id 
    where
        u1_0.id=?
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        count(gmh1_0.id) 
    from
        gbs_member_history gmh1_0 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gmh1_0.id,
        gmh1_0.created_at,
        gmh1_0.end_dt,
        gmh1_0.gbs_id,
        gmh1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        gmh1_0.start_dt,
        gmh1_0.updated_at 
    from
        gbs_member_history gmh1_0 
    join
        users m1_0 
            on m1_0.id=gmh1_0.member_id 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_member_history
        (created_at, end_dt, gbs_id, member_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        gmh1_0.id,
        gmh1_0.created_at,
        gmh1_0.end_dt,
        gmh1_0.gbs_id,
        gmh1_0.member_id,
        m1_0.id,
        m1_0.birth_date,
        m1_0.created_at,
        m1_0.department_id,
        m1_0.email,
        m1_0.name,
        m1_0.password,
        m1_0.phone_number,
        m1_0.role,
        m1_0.updated_at,
        gmh1_0.start_dt,
        gmh1_0.updated_at 
    from
        gbs_member_history gmh1_0 
    join
        users m1_0 
            on m1_0.id=gmh1_0.member_id 
    where
        gmh1_0.gbs_id=? 
        and gmh1_0.start_dt<=? 
        and (
            gmh1_0.end_dt is null 
            or gmh1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegator_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegator_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:36 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        department
        (created_at, name, updated_at, id) 
    values
        (?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        village
        (created_at, department_id, name, updated_at, id) 
    values
        (?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        gbs_group
        (created_at, name, term_end_dt, term_start_dt, updated_at, village_id, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (birth_date, created_at, department_id, email, name, password, phone_number, role, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        leader_delegation
        (created_at, delegatee_id, delegator_id, end_dt, gbs_id, start_dt, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        ld1_0.id,
        ld1_0.created_at,
        ld1_0.delegatee_id,
        ld1_0.delegator_id,
        ld1_0.end_dt,
        ld1_0.gbs_id,
        ld1_0.start_dt,
        ld1_0.updated_at 
    from
        leader_delegation ld1_0 
    where
        ld1_0.delegatee_id=? 
        and ld1_0.gbs_id=? 
        and ld1_0.start_dt<=? 
        and (
            ld1_0.end_dt is null 
            or ld1_0.end_dt>=?
        )
2025-05-09 23:40:37 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:40:37 [Test worker] [NONE] INFO  c.a.d.r.SystemLogRepositoryTest - Starting SystemLogRepositoryTest using Java 21.0.6 with PID 64223 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG c.a.d.r.SystemLogRepositoryTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:40:37 [Test worker] [NONE] INFO  c.a.d.r.SystemLogRepositoryTest - The following 1 profile is active: "test"
2025-05-09 23:40:37 [Test worker] [NONE] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table attendance (
        qt_count integer not null,
        week_start date not null,
        created_at timestamp(6) not null,
        created_by bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        ministry enum ('A','B','C') not null,
        worship enum ('O','X') not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_job_logs (
        batch_job_id bigint not null,
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        level varchar(10) not null,
        message TEXT not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table batch_jobs (
        created_at timestamp(6) not null,
        finished_at timestamp(6),
        id bigint generated by default as identity,
        schedule_time timestamp(6),
        started_at timestamp(6),
        error_message TEXT,
        parameters TEXT,
        job_type enum ('DATA_BACKUP','GBS_REORGANIZATION','REMINDER','STATISTICS_GENERATION') not null,
        status enum ('CANCELLED','COMPLETED','FAILED','QUEUED','RUNNING') not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table department (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_group (
        term_end_dt date not null,
        term_start_dt date not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        village_id bigint not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_leader_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        leader_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table gbs_member_history (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        member_id bigint not null,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table leader_delegation (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        delegatee_id bigint not null,
        delegator_id bigint not null,
        gbs_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_log (
        id bigint generated by default as identity,
        timestamp timestamp(6) not null,
        user_id bigint,
        level varchar(10) not null,
        category varchar(20) not null,
        ip_address varchar(39),
        server_instance varchar(50),
        message varchar(1000) not null,
        additional_info TEXT,
        user_agent varchar(255),
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table system_settings (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        setting_key varchar(50) not null unique,
        description varchar(200),
        setting_value varchar(1000) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table users (
        birth_date date,
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        phone_number varchar(20),
        name varchar(50) not null,
        email varchar(100) unique,
        password varchar(100),
        role enum ('ADMIN','LEADER','MEMBER','MINISTER','VILLAGE_LEADER') not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village (
        created_at timestamp(6) not null,
        department_id bigint not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        name varchar(50) not null,
        primary key (id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    create table village_leader (
        end_dt date,
        start_dt date not null,
        created_at timestamp(6) not null,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        village_id bigint not null,
        primary key (user_id, village_id)
    )
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKg7dtnois2g6ghgu4bl5gym92u 
       foreign key (created_by) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FKjn82a3qvj1ho9ajauog7v0f12 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists attendance 
       add constraint FK8f5fy874njy44gc8df63m187j 
       foreign key (member_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists batch_job_logs 
       add constraint FKsoyil2u66we091nme35nm6ste 
       foreign key (batch_job_id) 
       references batch_jobs
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_group 
       add constraint FKqvo83ldaqku2vayubiutcly4e 
       foreign key (village_id) 
       references village
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FKjls4dwfsilybq2sa0x35ml3f9 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_leader_history 
       add constraint FK810qej66ysfs5j8cqtqbtsr1h 
       foreign key (leader_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FK21l70t0cajgfj6rehvc9s21tc 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists gbs_member_history 
       add constraint FKasr4qspnvhydc2xbei8rlysxy 
       foreign key (member_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKs9xr3vr71pux3puk06pwiivfl 
       foreign key (delegatee_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKqg0jdq2i5pfckjlqr5xfhkguc 
       foreign key (delegator_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists leader_delegation 
       add constraint FKjr2i1o6vb363gnkm6qahsaji6 
       foreign key (gbs_id) 
       references gbs_group
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint FKfi832e3qv89fq376fuh8920y4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village 
       add constraint FKmp8tdn2nuthupcstb37lgifs4 
       foreign key (department_id) 
       references department
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK446snb5j15qqkonffm6tyepm0 
       foreign key (user_id) 
       references users
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    alter table if exists village_leader 
       add constraint FK9rpuj47r5r477bys6jmfthoeo 
       foreign key (village_id) 
       references village
2025-05-09 23:40:37 [Test worker] [NONE] INFO  c.a.d.r.SystemLogRepositoryTest - Started SystemLogRepositoryTest in 0.221 seconds (process running for 9.266)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        lower(sl1_0.message) like lower(('%'||?||'%')) escape '' 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        lower(sl1_0.message) like lower(('%'||?||'%')) escape '' 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.timestamp between ? and ? 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.category=? 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.category=? 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    insert 
    into
        system_log
        (additional_info, category, ip_address, level, message, server_instance, timestamp, user_agent, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.level=? 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG org.hibernate.SQL - 
    select
        sl1_0.id,
        sl1_0.additional_info,
        sl1_0.category,
        sl1_0.ip_address,
        sl1_0.level,
        sl1_0.message,
        sl1_0.server_instance,
        sl1_0.timestamp,
        sl1_0.user_agent,
        sl1_0.user_id 
    from
        system_log sl1_0 
    where
        sl1_0.level=? 
    fetch
        first ? rows only
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#179
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#180
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #179#181
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(#179).findByEmail(test@example.com)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#182
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #182#183
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#182).findByEmail(nonexistent@example.com)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#184
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#185
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#186
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#187
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#188
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on HttpServletRequest(request#186).getHeader(Authorization)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#184).doFilter(HttpServletRequest(request#186), HttpServletResponse(response#187))
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#184#189
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#190
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#191
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#192
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#193
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#194
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.JvmStaticMockFactory - Creating static mockk for SecurityContextHolder
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG io.mockk.proxy.jvm.StaticProxyMaker - Transforming class org.springframework.security.core.context.SecurityContextHolder for static method interception
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#195
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=child of static SecurityContextHolder#196
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #195#197
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#194#198
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#192).getHeader(Authorization)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering testuser on JwtTokenProvider(jwtTokenProvider#191).extractUsername(test-jwt-token)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#195) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on SecurityContext(#195).getAuthentication()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on UserDetailsService(userDetailsService#194).loadUserByUsername(testuser)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering false on JwtTokenProvider(jwtTokenProvider#191).validateToken(test-jwt-token, org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]])
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#190).doFilter(HttpServletRequest(request#192), HttpServletResponse(response#193))
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#190#199
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #195#200
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#201
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#202
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#203
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#204
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#205
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#206
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=child of static SecurityContextHolder#207
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #206#208
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#205#209
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#203).getHeader(Authorization)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering testuser on JwtTokenProvider(jwtTokenProvider#202).extractUsername(test-jwt-token)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#206) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on SecurityContext(#206).getAuthentication()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on UserDetailsService(userDetailsService#205).loadUserByUsername(testuser)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering true on JwtTokenProvider(jwtTokenProvider#202).validateToken(test-jwt-token, org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]])
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on HttpServletRequest(request#203).getRemoteAddr()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpSession name=child of request#203#210
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering HttpSession(child of request#203#210) on HttpServletRequest(request#203).getSession(false)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering  on HttpSession(child of request#203#210).getId()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering SecurityContext(#206) on class org.springframework.security.core.context.SecurityContextHolder.getContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on SecurityContext(#206).setAuthentication(UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=testuser, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=, SessionId=], Granted Authorities=[]])
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#201).doFilter(HttpServletRequest(request#203), HttpServletResponse(response#204))
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#201#211
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #206#212
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#213
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#214
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#215
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#216
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#217
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Bearer test-jwt-token on HttpServletRequest(request#215).getHeader(Authorization)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Throwing java.lang.RuntimeException: Token extraction failed on JwtTokenProvider(jwtTokenProvider#214).extractUsername(test-jwt-token)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#213).doFilter(HttpServletRequest(request#215), HttpServletResponse(response#216))
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#213#218
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetails name=child of userDetailsService#217#219
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for FilterChain name=filterChain#220
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=jwtTokenProvider#221
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=request#222
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletResponse name=response#223
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=userDetailsService#224
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on class org.springframework.security.core.context.SecurityContextHolder.clearContext()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering InvalidFormat on HttpServletRequest(request#222).getHeader(Authorization)
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on FilterChain(filterChain#220).doFilter(HttpServletRequest(request#222), HttpServletResponse(response#223))
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of filterChain#220#225
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.JvmStaticMockFactory - Disposing object mockk for Companion hashcode=9df3faa
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.JvmStaticMockFactory - Disposing static mockk for class org.springframework.security.core.context.SecurityContextHolder
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#226
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#227
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #227#228
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#227).getId()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#227).getUsername()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#229
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering other@example.com on UserDetailsAdapter(#229).getUsername()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#230
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#231
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #231#232
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#231).getId()
2025-05-09 23:40:37 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#231).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#233
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#234
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #234#235
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#234).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#234).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#236
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#237
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #237#238
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#237).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#237).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#239
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#240
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #240#241
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#240).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#240).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#242
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#243
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #243#244
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#243).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#243).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#245
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#246
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #246#247
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#246).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#246).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#246).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#248
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#249
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #249#250
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on UserDetailsAdapter(#249).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on UserDetailsAdapter(#249).getUsername()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#251
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#252
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#253
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#254
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#255
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #255#256
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#257
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #257#258
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#259
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #259#260
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#261
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #261#262
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#263
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #263#264
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#265
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#266
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #266#267
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #259#268
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #254#269
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#270
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #270#271
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #253#272
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#253) on SecurityContext(#254).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#270) on Authentication(#253).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#261) on UserDetailsAdapter(#270).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#261).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#261).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#261).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#261).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 4 on User(#261).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering false on AttendanceService(#251).hasLeaderAccess(1, 4)
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#273
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#274
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#275
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#276
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#277
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #277#278
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#279
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #279#280
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#281
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #281#282
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#283
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #283#284
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#285
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #285#286
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#287
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#288
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #288#289
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #281#290
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #276#291
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#292
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #292#293
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #275#294
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#275) on SecurityContext(#276).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#292) on Authentication(#275).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#283) on UserDetailsAdapter(#292).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#283).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#283).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#283).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#283).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 4 on User(#283).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering true on AttendanceService(#273).hasLeaderAccess(1, 4)
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#295
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#296
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#297
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#298
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#299
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #299#300
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#301
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #301#302
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#303
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #303#304
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#305
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #305#306
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#307
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #307#308
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#309
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#310
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #310#311
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #303#312
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #298#313
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#314
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #314#315
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #297#316
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#297) on SecurityContext(#298).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#314) on Authentication(#297).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#305) on UserDetailsAdapter(#314).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#305).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#305).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#305).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#317
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#318
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#319
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#320
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#321
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #321#322
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#323
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #323#324
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#325
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #325#326
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#327
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #327#328
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#329
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #329#330
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#331
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#332
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #332#333
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #325#334
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #320#335
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #319#336
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#319) on SecurityContext(#320).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#319).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#337
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#338
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#339
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#340
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#341
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #341#342
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#343
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #343#344
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#345
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #345#346
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#347
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #347#348
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#349
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #349#350
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#351
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#352
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #352#353
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #345#354
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #340#355
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#356
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #356#357
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #339#358
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#339) on SecurityContext(#340).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#356) on Authentication(#339).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#345) on UserDetailsAdapter(#356).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#345).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#345).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#345).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(#352) on User(#345).getVillageLeader()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Village(#351) on VillageLeader(#352).getVillage()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on Village(#351).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#359
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#360
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#361
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#362
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#363
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #363#364
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#365
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #365#366
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#367
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #367#368
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#369
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #369#370
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#371
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #371#372
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#373
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#374
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #374#375
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #367#376
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #362#377
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#378
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #378#379
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #361#380
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#361) on SecurityContext(#362).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#378) on Authentication(#361).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#367) on UserDetailsAdapter(#378).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#367).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#367).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#367).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#381
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#382
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#383
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#384
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#385
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #385#386
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#387
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #387#388
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#389
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #389#390
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#391
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #391#392
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#393
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #393#394
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#395
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#396
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #396#397
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #389#398
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #384#399
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#400
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #400#401
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #383#402
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#383) on SecurityContext(#384).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#400) on Authentication(#383).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#387) on UserDetailsAdapter(#400).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#387).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#387).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#403
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#404
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#405
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#406
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#407
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #407#408
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#409
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #409#410
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#411
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #411#412
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#413
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #413#414
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#415
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #415#416
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#417
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#418
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #418#419
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #411#420
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #406#421
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#422
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #422#423
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #405#424
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#405) on SecurityContext(#406).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#422) on Authentication(#405).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#407) on UserDetailsAdapter(#422).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#407).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#425
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#426
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#427
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#428
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#429
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #429#430
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#431
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #431#432
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#433
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #433#434
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#435
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #435#436
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#437
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #437#438
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#439
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#440
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #440#441
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #433#442
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #428#443
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#444
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #444#445
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #427#446
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#427) on SecurityContext(#428).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#444) on Authentication(#427).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#433) on UserDetailsAdapter(#444).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#433).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#433).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#433).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(#440) on User(#433).getVillageLeader()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Village(#439) on VillageLeader(#440).getVillage()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on Village(#439).getId()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#447
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#448
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#449
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#450
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#451
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #451#452
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#453
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #453#454
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#455
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #455#456
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#457
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #457#458
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#459
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #459#460
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#461
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#462
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #462#463
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #455#464
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #450#465
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#466
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #466#467
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #449#468
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#449) on SecurityContext(#450).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#466) on Authentication(#449).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#459) on UserDetailsAdapter(#466).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#459).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#459).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#459).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MEMBER on User(#459).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#469
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#470
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#471
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#472
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#473
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #473#474
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#475
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #475#476
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#477
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #477#478
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#479
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #479#480
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#481
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #481#482
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#483
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#484
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #484#485
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #477#486
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #472#487
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#488
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #488#489
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #471#490
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#488) on Authentication(#471).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#475) on UserDetailsAdapter(#488).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#475).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#491
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#492
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#493
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#494
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#495
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #495#496
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#497
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #497#498
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#499
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #499#500
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#501
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #501#502
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#503
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #503#504
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#505
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#506
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #506#507
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #499#508
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #494#509
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#510
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #510#511
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #493#512
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#493) on SecurityContext(#494).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#510) on Authentication(#493).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#495) on UserDetailsAdapter(#510).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#495).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#513
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#514
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#515
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#516
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#517
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #517#518
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#519
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #519#520
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#521
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #521#522
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#523
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #523#524
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#525
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #525#526
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#527
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#528
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #528#529
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #521#530
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #516#531
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #515#532
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#515).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#533
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#534
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#535
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#536
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#537
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #537#538
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#539
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #539#540
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#541
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #541#542
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#543
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #543#544
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#545
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #545#546
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#547
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#548
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #548#549
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #541#550
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #536#551
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #535#552
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#535) on SecurityContext(#536).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on Authentication(#535).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#553
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#554
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#555
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#556
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#557
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #557#558
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#559
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #559#560
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#561
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #561#562
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#563
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #563#564
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#565
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #565#566
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#567
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#568
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #568#569
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #561#570
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #556#571
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#572
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #572#573
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #555#574
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#572) on Authentication(#555).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#557) on UserDetailsAdapter(#572).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#557).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceService name=#575
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#576
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#577
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#578
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#579
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #579#580
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#581
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #581#582
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#583
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #583#584
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#585
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #585#586
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#587
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #587#588
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=#589
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=#590
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of #590#591
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #583#592
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #578#593
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsAdapter name=#594
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #594#595
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #577#596
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#577) on SecurityContext(#578).getAuthentication()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering UserDetailsAdapter(#594) on Authentication(#577).getPrincipal()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(#581) on UserDetailsAdapter(#594).getUser()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#581).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#581).getRole()
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#597
2025-05-09 23:40:39 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#598
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #597#599
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[BatchJob(id=1, jobType=GBS_REORGANIZATION, status=COMPLETED)] on BatchJobRepository(#597).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#600
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#601
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJob name=child of #600#602
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering {"key1":"value1","key2":"value2"} on ObjectMapper(#601).writeValueAsString({key1=value1, key2=value2})
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering BatchJob(id=1, jobType=GBS_REORGANIZATION, status=QUEUED) on BatchJobRepository(#600).save(BatchJob(id=null, jobType=GBS_REORGANIZATION, status=QUEUED))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#603
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#604
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #603#605
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#603).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#606
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#607
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #606#608
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[BatchJob(id=1, jobType=GBS_REORGANIZATION, status=RUNNING)] on BatchJobRepository(#606).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#609
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#610
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #609#611
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#609).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for BatchJobRepository name=#612
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#613
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #612#614
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on BatchJobRepository(#612).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#615
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#616
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#617
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#618
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#619
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#620
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #616#621
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(#616).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#622
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#623
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#624
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#625
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#626
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#627
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #624#628
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#624).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#629
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#630
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#631
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#632
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#633
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#634
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering false on DepartmentRepository(#629).existsById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#635
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#636
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#637
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#638
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#639
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#640
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #636#641
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(#636).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#642
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#643
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#644
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#645
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#646
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#647
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #642#648
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#642).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#649
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#650
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#651
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#652
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#653
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#654
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #651#655
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #652#656
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(#651).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#652).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#657
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#658
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#659
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#660
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#661
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#662
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #657#663
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#657).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#664
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#665
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#666
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#667
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#668
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#669
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #664#670
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#664).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#671
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#672
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#673
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#674
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#675
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#676
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #671#677
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(#671).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#678
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=#679
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#680
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#681
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#682
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=#683
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #680#684
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#680).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#685
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#686
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#687
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of #685#688
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.User instances on UserRepository(#685).findAll(Page request [number: 0, size 10, sort: UNSORTED])
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#689
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#690
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#691
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering true on UserRepository(#689).existsById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering kotlin.Unit on UserRepository(#689).deleteById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #689#692
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#693
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#694
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#695
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #694#696
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #693#697
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #693#698
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#693).findByEmail(hong@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(#694).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering encodedPassword on PasswordEncoder(#695).encode(Password123!)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(#693).save(User(id=null, name='홍길동', role=LEADER))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#699
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#700
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#701
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering false on UserRepository(#699).existsById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Unit name=child of #699#702
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#703
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#704
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#705
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #703#706
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #703#707
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#703).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering newEncodedPassword on PasswordEncoder(#705).encode(NewPassword123!)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(#703).save(User(id=1, name='홍길동', role=LEADER))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#708
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#709
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#710
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #708#711
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='기존사용자', role=MEMBER)] on UserRepository(#708).findByEmail(hong@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #709#712
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #708#713
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#714
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#715
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#716
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #714#717
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #714#718
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of #714#719
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#714).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#714).findByEmail(hong_updated@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동(수정)', role=ADMIN) on UserRepository(#714).save(User(id=1, name='홍길동(수정)', role=ADMIN))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#720
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=#721
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=#722
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #720#723
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(#720).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#724
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#725
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#726
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#725#727
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#725#728
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=1, village=1) on VillageLeaderRepository(villageLeaderRepository#725).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=1, village=1) on VillageLeaderRepository(villageLeaderRepository#725).save(VillageLeader(user=1, village=1))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#729
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#730
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#731
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#730#732
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=1, village=1) on VillageLeaderRepository(villageLeaderRepository#730).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#733
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#734
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#735
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#734#736
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on VillageLeaderRepository(villageLeaderRepository#734).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#737
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#738
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#739
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#737#740
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#739#741
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#738#742
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#738#743
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#738#744
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='김철수', role=VILLAGE_LEADER)] on UserRepository(userRepository#737).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='마을1')] on VillageRepository(villageRepository#739).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=1, village=1) on VillageLeaderRepository(villageLeaderRepository#738).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=2, village=1) on VillageLeaderRepository(villageLeaderRepository#738).save(VillageLeader(user=1, village=1))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on VillageLeaderRepository(villageLeaderRepository#738).findByUserIdAndEndDateIsNull(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=2, village=1) on VillageLeaderRepository(villageLeaderRepository#738).save(VillageLeader(user=2, village=1))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#745
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#746
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#747
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#746#748
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on VillageLeaderRepository(villageLeaderRepository#746).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#749
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderRepository name=villageLeaderRepository#750
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#751
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#749#752
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#751#753
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#750#754
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#750#755
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of villageLeaderRepository#750#756
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=VILLAGE_LEADER)] on UserRepository(userRepository#749).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='마을1')] on VillageRepository(villageRepository#751).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on VillageLeaderRepository(villageLeaderRepository#750).findByVillageIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on VillageLeaderRepository(villageLeaderRepository#750).findByUserIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeader(user=1, village=1) on VillageLeaderRepository(villageLeaderRepository#750).save(VillageLeader(user=1, village=1))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#757
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#758
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#759
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#760
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#761
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#762
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#763
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#764
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#765
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#765#766
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#759#767
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#757#768
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#760#769
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='테스트 마을')] on VillageRepository(villageRepository#765).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#759).findActiveGroupsByVillageId(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-11)] on AttendanceRepository(attendanceRepository#757).findDetailsByGbsIdAndWeek(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 1, weekStart: 2025-05-11, attendances: [Attendance(id=1, member=2, week=2025-05-11)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=4, name='리더', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#760).findLeaderByGbsIdAndDate(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=4, name='리더', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 5 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#761).countActiveMembers(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 5
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#770
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#771
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#772
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#773
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#774
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#775
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#776
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#777
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#778
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#773#779
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#773).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#780
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#781
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#782
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#783
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#784
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#785
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#786
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#787
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#788
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#786#789
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#781#790
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#782#791
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#781) on SecurityContext(securityContext#786).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@1d755f7 on Authentication(authentication#781).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#782).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#792
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#793
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#794
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#795
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#796
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#797
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#798
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#799
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#800
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#800#801
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#794#802
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#792#803
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#795#804
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='테스트 마을')] on VillageRepository(villageRepository#800).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#794).findActiveGroupsByVillageId(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-11)] on AttendanceRepository(attendanceRepository#792).findDetailsByGbsIdAndWeek(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 1, weekStart: 2025-05-11, attendances: [Attendance(id=1, member=2, week=2025-05-11)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=4, name='리더', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#795).findLeaderByGbsIdAndDate(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=4, name='리더', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 10 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#796).countActiveMembers(1, 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 10
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#805
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#806
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#807
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#808
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#809
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#810
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#811
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#812
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#813
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#808#814
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#810#815
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#808).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(id=1, delegator=2, delegatee=1, gbsGroup=1)] on LeaderDelegationRepository(leaderDelegationRepository#810).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#816
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#817
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#818
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#819
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#820
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#821
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#822
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#823
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#824
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#819#825
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#821#826
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#819).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(leaderDelegationRepository#821).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#827
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#828
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#829
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#830
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#831
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#832
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#833
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#834
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#835
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#833#836
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#828#837
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#829#838
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#830#839
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of leaderDelegationRepository#832#840
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#828) on SecurityContext(securityContext#833).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@224ad799 on Authentication(authentication#828).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#829).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#830).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(leaderDelegationRepository#832).findActiveDelegationsByDelegateeAndGbs(1, 1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#841
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#842
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#843
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#844
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#845
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#846
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#847
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#848
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#849
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#847#850
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#842#851
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#843#852
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#844#853
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#841#854
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#848#855
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#848#856
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#845#857
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#841#858
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#842) on SecurityContext(securityContext#847).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@52b873c9 on Authentication(authentication#842).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#843).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#844).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#841).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='조원1', role=MEMBER)] on UserRepository(userRepository#848).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2), GbsMemberHistory(id=2, gbsGroup=1, member=3)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#845).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=3, name='조원2', role=MEMBER)] on UserRepository(userRepository#848).findById(3)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2), GbsMemberHistory(id=2, gbsGroup=1, member=3)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#845).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-11), Attendance(id=2, member=3, week=2025-05-11)] on AttendanceRepository(attendanceRepository#841).saveAll([Attendance(id=null, member=2, week=2025-05-11), Attendance(id=null, member=3, week=2025-05-11)])
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#859
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#860
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#861
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#862
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#863
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#864
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#865
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#866
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#867
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#865#868
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#860#869
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#861#870
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#859#871
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#866#872
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#863#873
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#859#874
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#860) on SecurityContext(securityContext#865).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@70a33108 on Authentication(authentication#860).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#861).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#859).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='조원', role=MEMBER)] on UserRepository(userRepository#866).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#863).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-11)] on AttendanceRepository(attendanceRepository#859).saveAll([Attendance(id=null, member=2, week=2025-05-11)])
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#875
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#876
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#877
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#878
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#879
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#880
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#881
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#882
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#883
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of securityContext#881#884
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of authentication#876#885
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#877#886
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of gbsLeaderHistoryRepository#878#887
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#875#888
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#882#889
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#879#890
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(authentication#876) on SecurityContext(securityContext#881).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.security.UserDetailsAdapter@6d76df03 on Authentication(authentication#876).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#877).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(id=1, gbsGroup=1, leader=1) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#878).findByGbsGroupIdAndLeaderIdAndEndDateIsNull(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#875).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=5, name='타GBS 조원', role=MEMBER)] on UserRepository(userRepository#882).findById(5)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#879).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#891
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#892
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#893
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#894
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#895
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#896
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=securityContext#897
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#898
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#899
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#893#900
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#891#901
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='테스트 GBS')] on GbsGroupRepository(gbsGroupRepository#893).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2025-05-11)] on AttendanceRepository(attendanceRepository#891).findByGbsGroupAndWeekStart(GbsGroup(id=1, name='테스트 GBS'), 2025-05-11)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#902
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#903
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#904
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#905
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#906
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#907
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#908
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#908#909
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#903#910
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#904#911
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#902#912
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#903#913
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#904#914
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#902#915
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#903#916
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#904#917
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#902#918
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#908).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1')] on GbsGroupRepository(gbsGroupRepository#903).findActiveGroupsByVillageId(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#902).findDetailsByGbsIdAndWeek(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2023-01-08, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=10, name='과거리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#904).findLeaderByGbsIdAndDate(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=10, name='과거리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#905).countActiveMembers(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#908).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1')] on GbsGroupRepository(gbsGroupRepository#903).findActiveGroupsByVillageId(2, 2023-06-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#902).findDetailsByGbsIdAndWeek(2, 2023-06-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2023-06-01, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=10, name='과거리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#904).findLeaderByGbsIdAndDate(2, 2023-06-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=10, name='과거리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 3 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#905).countActiveMembers(2, 2023-06-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 3
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#908).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1')] on GbsGroupRepository(gbsGroupRepository#903).findActiveGroupsByVillageId(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#902).findDetailsByGbsIdAndWeek(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2025-05-09, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=11, name='현재리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#904).findLeaderByGbsIdAndDate(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=11, name='현재리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 4 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#905).countActiveMembers(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 4
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#919
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#920
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#921
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#922
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#923
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#924
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#925
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#925#926
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#920#927
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#921#928
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#919#929
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#921#930
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#919#931
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#925).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1'), GbsGroup(id=3, name='GBS2')] on GbsGroupRepository(gbsGroupRepository#920).findActiveGroupsByVillageId(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=13, week=2023-01-08), Attendance(id=2, member=14, week=2023-01-08)] on AttendanceRepository(attendanceRepository#919).findDetailsByGbsIdAndWeek(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2023-01-08, attendances: [Attendance(id=1, member=13, week=2023-01-08), Attendance(id=2, member=14, week=2023-01-08)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=10, name='과거리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#921).findLeaderByGbsIdAndDate(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=10, name='과거리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#922).countActiveMembers(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=3, member=15, week=2023-01-08), Attendance(id=4, member=16, week=2023-01-08)] on AttendanceRepository(attendanceRepository#919).findDetailsByGbsIdAndWeek(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 3, weekStart: 2023-01-08, attendances: [Attendance(id=3, member=15, week=2023-01-08), Attendance(id=4, member=16, week=2023-01-08)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=12, name='리더2', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#921).findLeaderByGbsIdAndDate(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=12, name='리더2', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#922).countActiveMembers(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#932
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#933
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#934
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#935
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#936
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#937
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#938
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#938#939
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#933#940
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#934#941
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#932#942
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#934#943
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#932#944
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#933#945
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#934#946
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#932#947
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#938).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1'), GbsGroup(id=3, name='GBS2')] on GbsGroupRepository(gbsGroupRepository#933).findActiveGroupsByVillageId(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#932).findDetailsByGbsIdAndWeek(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2023-01-08, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=10, name='과거리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#934).findLeaderByGbsIdAndDate(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=10, name='과거리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#935).countActiveMembers(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#932).findDetailsByGbsIdAndWeek(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 3, weekStart: 2023-01-08, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=12, name='리더2', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#934).findLeaderByGbsIdAndDate(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=12, name='리더2', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#935).countActiveMembers(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#938).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1')] on GbsGroupRepository(gbsGroupRepository#933).findActiveGroupsByVillageId(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#932).findDetailsByGbsIdAndWeek(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2025-05-09, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=11, name='현재리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#934).findLeaderByGbsIdAndDate(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=11, name='현재리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 3 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#935).countActiveMembers(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 3
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#948
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#949
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#950
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#951
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#952
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#953
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#954
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#954#955
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#949#956
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#950#957
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#948#958
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#950#959
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#948#960
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#949#961
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#950#962
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#948#963
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#954).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1'), GbsGroup(id=3, name='GBS2')] on GbsGroupRepository(gbsGroupRepository#949).findActiveGroupsByVillageId(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#948).findDetailsByGbsIdAndWeek(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2023-01-08, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=10, name='과거리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#950).findLeaderByGbsIdAndDate(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=10, name='과거리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#951).countActiveMembers(2, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#948).findDetailsByGbsIdAndWeek(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 3, weekStart: 2023-01-08, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=12, name='리더2', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#950).findLeaderByGbsIdAndDate(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=12, name='리더2', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 2 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#951).countActiveMembers(3, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 2
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=2, name='R village')] on VillageRepository(villageRepository#954).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=2, name='GBS1')] on GbsGroupRepository(gbsGroupRepository#949).findActiveGroupsByVillageId(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on AttendanceRepository(attendanceRepository#948).findDetailsByGbsIdAndWeek(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;gbsId: 2, weekStart: 2025-05-09, attendances: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=11, name='현재리더1', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#950).findLeaderByGbsIdAndDate(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;leader: User(id=11, name='현재리더1', role=LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 3 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#951).countActiveMembers(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.AttendanceService - createGbsAttendanceSummary;totalMembers: 3
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#964
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#965
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#966
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#967
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#968
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#969
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#970
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#971
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#972
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #972#973
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #972#974
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #972#975
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #969#976
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=#977
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #970#978
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #968#979
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#972).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#972).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#972).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#972).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#972).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsLeaderHistory(#977) on GbsLeaderHistoryRepository(#969).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#972).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#970).findActiveByGbsIdAndDelegateeId(1, 1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#968).getGbsMembers(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#980
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#981
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#982
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#983
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#984
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#985
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#986
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#987
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#988
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #988#989
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #988#990
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #988#991
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#992
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#993
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #984#994
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #984#995
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#988).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#988).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#988).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#988).getVillageLeader()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='테스트 GBS') on OrganizationService(#984).getGbsGroupById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#988).getVillageLeader()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#984).getGbsMembers(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#996
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#997
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#998
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#999
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1000
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1001
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1002
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1003
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1004
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1004#1005
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1004#1006
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1004#1007
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#1004).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1004).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1004).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1004).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1008
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1009
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1010
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1011
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1012
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1013
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1014
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1015
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1016
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1016#1017
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1016#1018
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1016#1019
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #1012#1020
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#1016).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering MINISTER on User(#1016).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#1012).getGbsMembers(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1021
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1022
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1023
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1024
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1025
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1026
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1027
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1028
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1029
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1029#1030
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1029#1031
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1029#1032
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #1026#1033
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1027#1034
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=#1035
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #1025#1036
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1029).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1029).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1029).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1029).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#1029).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#1026).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 200)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 200 on User(#1029).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(#1035) on LeaderDelegationRepository(#1027).findActiveByGbsIdAndDelegateeId(1, 200, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#1025).getGbsMembers(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1037
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1038
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1039
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1040
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1041
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1042
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1043
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1044
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1045
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1045#1046
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1045#1047
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1045#1048
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #1041#1049
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering ADMIN on User(#1045).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#1041).getGbsMembers(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1050
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1051
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1052
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1053
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1054
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1055
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1056
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1057
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1058
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1058#1059
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1058#1060
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1058#1061
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #1054#1062
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMembersListResponse name=child of #1054#1063
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1055#1064
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#1058).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#1058).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on GbsLeaderHistoryRepository(#1055).findByLeaderIdWithDetailsOrderByStartDateDesc(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=2, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#1054).getGbsMembers(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMembersListResponse(gbsId=1, gbsName=테스트 GBS, memberCount=2, members=[GbsMemberResponse(id=1, name=조원1, email=member1@example.com, birthDate=2000-01-01, joinDate=2025-05-09, phoneNumber=010-1234-5678), GbsMemberResponse(id=2, name=조원2, email=member2@example.com, birthDate=2000-02-02, joinDate=2025-05-09, phoneNumber=010-1234-5678)]) on OrganizationService(#1054).getGbsMembers(1, 2022-12-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 사용자 on User(#1058).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 테스트 사용자 on User(#1058).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1065
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1066
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1067
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1068
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1069
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1070
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1071
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1072
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1073
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1073#1074
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1073#1075
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1073#1076
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #1070#1077
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1071#1078
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1073).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1073).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1073).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LEADER on User(#1073).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#1073).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#1070).findCurrentLeaderHistoryByGbsIdAndLeaderId(1, 1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#1073).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#1071).findActiveByGbsIdAndDelegateeId(1, 1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1079
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1080
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1081
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1082
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1083
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1084
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1085
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1086
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1087
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1087#1088
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1087#1089
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1087#1090
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#1091
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#1092
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of #1083#1093
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#1087).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#1087).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#1087).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#1087).getVillageLeader()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='테스트 GBS') on OrganizationService(#1083).getGbsGroupById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on User(#1087).getVillageLeader()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VILLAGE_LEADER on User(#1087).getRole()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1094
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1095
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1096
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1097
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1098
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1099
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1100
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1101
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1102
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Role name=child of #1102#1103
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1102#1104
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeader name=child of #1102#1105
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=#1106
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #1099#1107
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering <error "io.mockk.MockKException: No other calls allowed in stdObjectAnswer than equals/hashCode/toString"> on GbsLeaderHistoryRepository(#1099).findByLeaderIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 1 on User(#1102).getId()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 리더1 on User(#1102).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1108
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=leaderDelegationRepository#1109
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1110
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=userService#1111
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=#1112
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=#1113
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1114
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserService name=#1115
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistory name=child of #1113#1116
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(#1113).findByLeaderIdAndEndDateIsNull(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1117
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1118
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1119
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1118#1120
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1118#1121
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1119#1122
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1118).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1118).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1119).findById(3)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1123
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1124
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1125
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1123#1126
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1123#1127
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(#1123).findActiveByDelegateIdAndDate(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LeaderDelegationRepository(#1123).findActiveByUserIdAndDate(2, 2025-05-09, true)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1128
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1129
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1130
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1129#1131
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1129#1132
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1130#1133
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1129).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1129).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(#1130).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1134
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1135
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1136
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1135#1137
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1135#1138
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1136#1139
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1135).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1135).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1136).findById(3)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1140
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1141
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1142
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1141#1143
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1141#1144
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1142#1145
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1140#1146
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1141).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1141).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1142).findById(3)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(id=99, delegator=1, delegatee=2, gbsGroup=3) on LeaderDelegationRepository(#1140).findActiveByGbsGroupIdAndDate(3, 2025-05-10)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1147
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1148
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1149
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1148#1150
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1148#1151
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1149#1152
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1147#1153
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegation name=child of #1147#1154
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1148).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='위임받는자', role=MEMBER)] on UserRepository(#1148).findById(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=3, name='GBS 그룹')] on GbsGroupRepository(#1149).findById(3)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on LeaderDelegationRepository(#1147).findActiveByGbsGroupIdAndDate(3, 2025-05-10)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering LeaderDelegation(id=1, delegator=1, delegatee=2, gbsGroup=3) on LeaderDelegationRepository(#1147).save(LeaderDelegation(id=null, delegator=1, delegatee=2, gbsGroup=3))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1155
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1156
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1157
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1156#1158
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#1156).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1159
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1160
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1161
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1160#1162
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1160#1163
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='위임자', role=LEADER)] on UserRepository(#1160).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(#1160).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for LeaderDelegationRepository name=#1164
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=#1165
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=#1166
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1164#1167
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1164#1168
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(id=1, delegator=1, delegatee=2, gbsGroup=3)] on LeaderDelegationRepository(#1164).findActiveByDelegateIdAndDate(2, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [LeaderDelegation(id=2, delegator=2, delegatee=3, gbsGroup=3)] on LeaderDelegationRepository(#1164).findActiveByUserIdAndDate(2, 2025-05-09, true)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1169
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1170
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1171
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1172
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1173
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of departmentRepository#1169#1174
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1169).findAll()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1175
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1176
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1177
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1178
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1179
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1179#1180
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#1176#1181
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1177#1182
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1177#1183
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#1178#1184
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsMemberHistoryRepository#1178#1185
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='1마을')] on VillageRepository(villageRepository#1179).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS'), GbsGroup(id=2, name='2GBS')] on GbsGroupRepository(gbsGroupRepository#1176).findActiveGroupsByVillageId(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1177).findCurrentLeaderByGbsId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1177).findCurrentLeaderByGbsId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsMemberHistory(id=1, gbsGroup=1, member=2), GbsMemberHistory(id=2, gbsGroup=1, member=3)] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1178).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=1, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1177).findCurrentLeaderByGbsId(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1177).findCurrentLeaderByGbsId(2)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1178).findActiveMembers(GbsMemberHistorySearchCondition(gbsId=2, startDate=2025-05-09, endDate=2025-05-09))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1186
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1187
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1188
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1189
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1190
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1190#1191
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='1마을')] on VillageRepository(villageRepository#1190).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1192
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1193
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1194
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1195
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1196
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1192#1197
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(departmentRepository#1192).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1198
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1199
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1200
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1201
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1202
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1200#1203
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1200).findCurrentLeaderByGbsId(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1204
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1205
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1206
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1207
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1208
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1204#1209
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1204).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1210
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1211
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1212
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1213
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1214
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#1211#1215
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1211).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1216
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1217
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1218
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1219
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1220
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#1217#1221
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1217).findActiveGroupsByVillageId(1, 2025-05-09)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1222
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1223
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1224
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1225
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1226
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of gbsGroupRepository#1223#1227
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on GbsGroupRepository(gbsGroupRepository#1223).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1228
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1229
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1230
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1231
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1232
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1232#1233
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of gbsGroupRepository#1229#1234
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Village(id=1, name='1마을')] on VillageRepository(villageRepository#1232).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on GbsGroupRepository(gbsGroupRepository#1229).findByVillage(Village(id=1, name='1마을'))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1235
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1236
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1237
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1238
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1239
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of villageRepository#1239#1240
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on VillageRepository(villageRepository#1239).findById(999)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1241
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1242
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1243
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1244
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1245
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of gbsLeaderHistoryRepository#1243#1246
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on GbsLeaderHistoryRepository(gbsLeaderHistoryRepository#1243).findCurrentLeaderByGbsId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1247
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1248
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1249
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1250
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageRepository name=villageRepository#1251
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1247#1252
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of villageRepository#1251#1253
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='청년부')] on DepartmentRepository(departmentRepository#1247).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Village(id=1, name='1마을')] on VillageRepository(villageRepository#1251).findByDepartment(Department(id=1, name='청년부'))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1254
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1255
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1256
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1257
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1258
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=child of organizationService#1258#1259
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1258#1260
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Department(id=1, name='청년부') on OrganizationService(organizationService#1258).getDepartmentById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on OrganizationService(organizationService#1258).getVillagesByDepartment(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1261
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1262
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1263
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1264
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1265
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of organizationService#1265#1266
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='1GBS') on OrganizationService(organizationService#1265).getGbsGroupById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 홍길동 on OrganizationService(organizationService#1265).getCurrentLeaderForGbs(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 0 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1264).countActiveMembers(1, 2023-01-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getGbsStatistics;gbsGroup: GbsGroup(id=1, name='1GBS'), totalMembers: 0
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1267
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1268
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1269
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1270
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1271
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Department name=child of organizationService#1271#1272
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1271#1273
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1274
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageStatistics name=child of #1274#1275
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Department(id=1, name='청년부') on OrganizationService(organizationService#1271).getDepartmentById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Village(id=1, name='1마을')] on OrganizationService(organizationService#1271).getVillagesByDepartment(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getDepartmentStatistics;Villages: [Village(id=1, name='1마을')]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageStatistics(villageId=1, villageName=1마을, gbsStats=[], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1274).getVillageStatistics(1, 2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering DepartmentStatistics(departmentId=1, departmentName=청년부, startDate=2023-01-01, endDate=2023-01-31, villageStats=[VillageStatistics(villageId=1, villageName=1마을, gbsStats=[], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0)], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1274).getDepartmentStatistics(1, 2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1276
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1277
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1278
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1279
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1280
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1281
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1282
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1283
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1284
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1285
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of organizationService#1285#1286
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1285#1287
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Village(id=1, name='1마을') on OrganizationService(organizationService#1285).getVillageById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [] on OrganizationService(organizationService#1285).getActiveGbsGroupsByVillage(1, 2023-01-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getVillageStatistics;gbsGroups: []
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1288
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1289
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1290
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1291
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1292
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Village name=child of organizationService#1292#1293
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of organizationService#1292#1294
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1295
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsStatistics name=child of #1295#1296
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Village(id=1, name='1마을') on OrganizationService(organizationService#1292).getVillageById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [GbsGroup(id=1, name='1GBS')] on OrganizationService(organizationService#1292).getActiveGbsGroupsByVillage(1, 2023-01-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getVillageStatistics;gbsGroups: [GbsGroup(id=1, name='1GBS')]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0, weeklyStats=[]) on StatisticsService(#1295).getGbsStatistics(1, 2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering VillageStatistics(villageId=1, villageName=1마을, gbsStats=[GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0, weeklyStats=[])], totalMembers=10, attendedMembers=8, attendanceRate=80.0, averageQtCount=4.0) on StatisticsService(#1295).getVillageStatistics(1, 2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AttendanceRepository name=attendanceRepository#1297
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroupRepository name=gbsGroupRepository#1298
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsLeaderHistoryRepository name=gbsLeaderHistoryRepository#1299
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1300
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for OrganizationService name=organizationService#1301
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsGroup name=child of organizationService#1301#1302
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#1297#1303
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of attendanceRepository#1297#1304
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating spyk for StatisticsService name=#1305
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of #1305#1306
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsGroup(id=1, name='1GBS') on OrganizationService(organizationService#1301).getGbsGroupById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 홍길동 on OrganizationService(organizationService#1301).getCurrentLeaderForGbs(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 10 on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1300).countActiveMembers(1, 2023-01-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getGbsStatistics;gbsGroup: GbsGroup(id=1, name='1GBS'), totalMembers: 10
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [2023-01-01, 2023-01-08] on StatisticsService(#1305).generateWeeklyDates(2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=1, member=2, week=2023-01-01), Attendance(id=2, member=2, week=2023-01-01)] on AttendanceRepository(attendanceRepository#1297).findDetailsByGbsIdAndWeek(1, 2023-01-01)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getGbsStatistics;weekStart: 2023-01-01, attendances: [Attendance(id=1, member=2, week=2023-01-01), Attendance(id=2, member=2, week=2023-01-01)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [Attendance(id=3, member=2, week=2023-01-08), Attendance(id=4, member=2, week=2023-01-08)] on AttendanceRepository(attendanceRepository#1297).findDetailsByGbsIdAndWeek(1, 2023-01-08)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG c.attendly.service.StatisticsService - getGbsStatistics;weekStart: 2023-01-08, attendances: [Attendance(id=3, member=2, week=2023-01-08), Attendance(id=4, member=2, week=2023-01-08)]
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsStatistics(gbsId=1, gbsName=1GBS, leaderName=홍길동, totalMembers=10, attendedMembers=2, attendanceRate=20.0, averageQtCount=3.5, weeklyStats=[WeeklyStatistics(weekStart=2023-01-01, totalMembers=10, attendedMembers=2, attendanceRate=20.0, averageQtCount=3.5), WeeklyStatistics(weekStart=2023-01-08, totalMembers=10, attendedMembers=2, attendanceRate=20.0, averageQtCount=3.5)]) on StatisticsService(#1305).getGbsStatistics(1, 2023-01-01, 2023-01-31)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1307
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1308
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1309
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1310
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1309#1311
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Page name=child of #1307#1312
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Page 1 of 1 containing com.attendly.domain.entity.SystemLog instances on SystemLogRepository(#1307).searchLogs(INFO, TEST, null, null, null, null, Page request [number: 0, size 10, sort: UNSORTED])
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1313
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1314
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1315
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1316
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1315#1317
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1318
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1319
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1320
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1321
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1320#1322
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of #1318#1323
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[com.attendly.domain.entity.SystemLog@60200842] on SystemLogRepository(#1318).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLogRepository name=#1324
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for ObjectMapper name=#1325
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SecurityContext name=#1326
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1327
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=child of #1326#1328
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for HttpServletRequest name=#1329
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Any name=child of #1327#1330
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for SystemLog name=child of #1324#1331
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Authentication(#1327) on SecurityContext(#1326).getAuthentication()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering true on Authentication(#1327).isAuthenticated()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering org.springframework.security.core.userdetails.User [Username=1, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[]] on Authentication(#1327).getPrincipal()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering 127.0.0.1 on HttpServletRequest(#1329).getRemoteAddr()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Test User Agent on HttpServletRequest(#1329).getHeader(User-Agent)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering com.attendly.domain.entity.SystemLog@51bcc42e on SystemLogRepository(#1324).save(com.attendly.domain.entity.SystemLog@2782a6c5)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1332
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1333
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1334
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1335
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1336
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1336#1337
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1333#1338
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1336).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on DepartmentRepository(departmentRepository#1333).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1336#1339
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1340
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1341
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1342
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1343
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1344
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1344#1345
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistory name=child of gbsMemberHistoryRepository#1342#1346
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(userRepository#1344).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMemberHistory(id=1, gbsGroup=30, member=1) on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1342).findCurrentMemberHistoryByMemberId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1347
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1348
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1349
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1350
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1351
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1352
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1351#1353
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on Authentication(#1352).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1351).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1354
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1355
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1356
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1357
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1358
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1358#1359
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1355#1360
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1358#1361
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1358).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[Department(id=1, name='대학부')] on DepartmentRepository(departmentRepository#1355).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering encoded_password on PasswordEncoder(passwordEncoder#1357).encode(password123)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering User(id=1, name='홍길동', role=LEADER) on UserRepository(userRepository#1358).save(User(id=null, name='홍길동', role=LEADER))
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1362
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1363
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1364
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1365
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1366
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=#1367
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1366#1368
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering nonexistent@example.com on Authentication(#1367).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional.empty on UserRepository(userRepository#1366).findByEmail(nonexistent@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1369
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1370
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1371
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1372
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1373
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1373#1374
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1373#1375
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistory name=child of gbsMemberHistoryRepository#1371#1376
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering test@example.com on Authentication(authentication#1369).getName()
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(userRepository#1373).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(userRepository#1373).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering GbsMemberHistory(id=1, gbsGroup=30, member=1) on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1371).findCurrentMemberHistoryByMemberId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1377
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1378
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1379
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1380
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1381
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1381#1382
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistory name=child of gbsMemberHistoryRepository#1379#1383
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=MEMBER)] on UserRepository(userRepository#1381).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering null on GbsMemberHistoryRepository(gbsMemberHistoryRepository#1379).findCurrentMemberHistoryByMemberId(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1384
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1385
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1386
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1387
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1388
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1388#1389
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1388).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1390
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1391
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1392
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1393
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1394
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=#1395
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1394#1396
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='테스트 사용자', role=VILLAGE_LEADER)] on UserRepository(userRepository#1394).findById(1)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1397
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1398
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1399
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1400
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1401
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1401#1402
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1401#1403
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1401).findByRole(LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=2, name='Member User', role=MEMBER)] on UserRepository(userRepository#1401).findByRole(MEMBER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1404
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1405
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1406
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1407
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1408
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1408#1409
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=1, name='홍길동', role=LEADER)] on UserRepository(userRepository#1408).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1410
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1411
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1412
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1413
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1414
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1414#1415
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for List name=child of userRepository#1414#1416
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1414).findByRole(LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering [User(id=1, name='Leader User', role=LEADER)] on UserRepository(userRepository#1414).findByRole(VILLAGE_LEADER)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1417
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1418
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1419
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1420
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1421
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Authentication name=authentication#1422
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for DepartmentRepository name=departmentRepository#1423
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for GbsMemberHistoryRepository name=gbsMemberHistoryRepository#1424
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for PasswordEncoder name=passwordEncoder#1425
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserRepository name=userRepository#1426
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of userRepository#1426#1427
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.r.states.AnsweringState - Answering Optional[User(id=2, name='기존 사용자', role=MEMBER)] on UserRepository(userRepository#1426).findByEmail(test@example.com)
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Optional name=child of departmentRepository#1423#1428
2025-05-09 23:40:40 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for User name=child of userRepository#1426#1429
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists attendance cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_job_logs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists batch_jobs cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists department cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_group cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_leader_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists gbs_member_history cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists leader_delegation cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_log cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists system_settings cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village cascade 
2025-05-09 23:40:40 [SpringApplicationShutdownHook] [NONE] DEBUG org.hibernate.SQL - 
    drop table if exists village_leader cascade 
2025-05-09 23:44:03 [background-preinit] [NONE] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-05-09 23:44:03 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:44:03 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - Starting AdminVillageLeaderControllerTest using Java 21.0.1 with PID 66179 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:44:03 [Test worker] [NONE] DEBUG c.a.a.c.AdminVillageLeaderControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:44:03 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/user/study/attendly-api/build/classes/kotlin/main/com/attendly/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-05-09 23:44:04 [Test worker] [NONE] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.attendly.security.JwtAuthenticationFilter required a bean of type 'com.attendly.security.JwtTokenProvider' that could not be found.


Action:

Consider defining a bean of type 'com.attendly.security.JwtTokenProvider' in your configuration.

2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@2123a61c]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@12811f95 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@745c2004, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@552ed807, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@ea9e4ba2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@48e070b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@45f421c, [ImportsContextCustomizer@69356aca key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7afbf561, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b0615ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@8e105780, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ea899a9, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6a82260a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:128)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:112)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:69)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/user/study/attendly-api/build/classes/kotlin/main/com/attendly/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 88 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:2279)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1702)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 114 common frames omitted
2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@4d9cf71d]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@12811f95 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@745c2004, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@552ed807, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@ea9e4ba2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@48e070b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@45f421c, [ImportsContextCustomizer@69356aca key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7afbf561, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b0615ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@8e105780, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ea899a9, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6a82260a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:128)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:112)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:69)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@49322d04]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@12811f95 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@745c2004, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@552ed807, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@ea9e4ba2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@48e070b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@45f421c, [ImportsContextCustomizer@69356aca key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7afbf561, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b0615ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@8e105780, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ea899a9, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6a82260a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:128)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:112)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:69)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@eb6ccbc]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@12811f95 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@745c2004, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@552ed807, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@ea9e4ba2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@48e070b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@45f421c, [ImportsContextCustomizer@69356aca key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7afbf561, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b0615ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@8e105780, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ea899a9, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6a82260a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:128)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:112)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:69)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:04 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@6f7a65e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@12811f95 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@745c2004, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@552ed807, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@ea9e4ba2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@48e070b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@45f421c, [ImportsContextCustomizer@69356aca key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7afbf561, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6b0615ae, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@8e105780, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7ea899a9, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@6a82260a], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.postProcessFields(MockitoTestExecutionListener.java:128)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.injectFields(MockitoTestExecutionListener.java:112)
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:69)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:41 [background-preinit] [NONE] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-05-09 23:44:41 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:44:41 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - Starting AdminVillageLeaderControllerTest using Java 21.0.1 with PID 66454 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:44:41 [Test worker] [NONE] DEBUG c.a.a.c.AdminVillageLeaderControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:44:41 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:44:42 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AdminVillageLeaderService name=com.attendly.service.AdminVillageLeaderService#0 bean#1
2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/user/study/attendly-api/build/classes/kotlin/main/com/attendly/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-05-09 23:44:43 [Test worker] [NONE] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.attendly.security.JwtAuthenticationFilter required a bean of type 'com.attendly.security.JwtTokenProvider' that could not be found.


Action:

Consider defining a bean of type 'com.attendly.security.JwtTokenProvider' in your configuration.

2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [com.ninjasquad.springmockk.MockkTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@627d5f1]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@5c1687d1 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[[MockkDefinition@1504b493 name = [null], typeToMock = com.attendly.service.AdminVillageLeaderService, extraInterfaces = set[[empty]], clear = AFTER]]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@64b7225f, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4beeb0e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@cca9736c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f3eb6b47, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@771d1ffb, [ImportsContextCustomizer@21ed4a51 key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@670ce331, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4b2e3e8f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2015b2cd, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@796c9185], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.postProcessFields(MockkTestExecutionListener.kt:85)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.injectFields(MockkTestExecutionListener.kt:55)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.prepareTestInstance(MockkTestExecutionListener.kt:30)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [/Users/user/study/attendly-api/build/classes/kotlin/main/com/attendly/security/JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1387)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1224)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:569)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1221)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1122)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:144)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1462)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:563)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:144)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:110)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 88 common frames omitted
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.attendly.security.JwtTokenProvider' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:2279)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1702)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1627)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 114 common frames omitted
2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [com.ninjasquad.springmockk.MockkTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@46c2189e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@5c1687d1 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[[MockkDefinition@1504b493 name = [null], typeToMock = com.attendly.service.AdminVillageLeaderService, extraInterfaces = set[[empty]], clear = AFTER]]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@64b7225f, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4beeb0e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@cca9736c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f3eb6b47, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@771d1ffb, [ImportsContextCustomizer@21ed4a51 key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@670ce331, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4b2e3e8f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2015b2cd, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@796c9185], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.postProcessFields(MockkTestExecutionListener.kt:85)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.injectFields(MockkTestExecutionListener.kt:55)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.prepareTestInstance(MockkTestExecutionListener.kt:30)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [com.ninjasquad.springmockk.MockkTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@2570851e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@5c1687d1 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[[MockkDefinition@1504b493 name = [null], typeToMock = com.attendly.service.AdminVillageLeaderService, extraInterfaces = set[[empty]], clear = AFTER]]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@64b7225f, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4beeb0e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@cca9736c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f3eb6b47, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@771d1ffb, [ImportsContextCustomizer@21ed4a51 key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@670ce331, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4b2e3e8f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2015b2cd, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@796c9185], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.postProcessFields(MockkTestExecutionListener.kt:85)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.injectFields(MockkTestExecutionListener.kt:55)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.prepareTestInstance(MockkTestExecutionListener.kt:30)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [com.ninjasquad.springmockk.MockkTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@76673ed]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@5c1687d1 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[[MockkDefinition@1504b493 name = [null], typeToMock = com.attendly.service.AdminVillageLeaderService, extraInterfaces = set[[empty]], clear = AFTER]]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@64b7225f, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4beeb0e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@cca9736c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f3eb6b47, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@771d1ffb, [ImportsContextCustomizer@21ed4a51 key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@670ce331, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4b2e3e8f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2015b2cd, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@796c9185], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.postProcessFields(MockkTestExecutionListener.kt:85)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.injectFields(MockkTestExecutionListener.kt:55)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.prepareTestInstance(MockkTestExecutionListener.kt:30)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:44:43 [Test worker] [NONE] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [com.ninjasquad.springmockk.MockkTestExecutionListener] to prepare test instance [com.attendly.api.controller.AdminVillageLeaderControllerTest@6dfebd2a]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@5c1687d1 testClass = com.attendly.api.controller.AdminVillageLeaderControllerTest, locations = [], classes = [com.attendly.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [MockkContextCustomizer(definitions=[[MockkDefinition@1504b493 name = [null], typeToMock = com.attendly.service.AdminVillageLeaderService, extraInterfaces = set[[empty]], clear = AFTER]]), org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@64b7225f, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4beeb0e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@cca9736c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@f3eb6b47, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@771d1ffb, [ImportsContextCustomizer@21ed4a51 key = [com.attendly.security.TestSecurityConfig, org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@670ce331, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4b2e3e8f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2015b2cd, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@796c9185], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.postProcessFields(MockkTestExecutionListener.kt:85)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.injectFields(MockkTestExecutionListener.kt:55)
	at com.ninjasquad.springmockk.MockkTestExecutionListener.prepareTestInstance(MockkTestExecutionListener.kt:30)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:159)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:124)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:63)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:200)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
2025-05-09 23:45:22 [background-preinit] [NONE] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-05-09 23:45:22 [Test worker] [NONE] WARN  o.s.b.t.j.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/org.json/json/20230618/1ae16df7d556d02713e241086f878399e99260d6/json-20230618.jar!/org/json/JSONObject.class
	jar:file:/Users/user/.gradle/caches/modules-2/files-2.1/com.vaadin.external.google/android-json/0.0.20131108.vaadin1/fa26d351fe62a6a17f5cda1287c1c6110dec413f/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2025-05-09 23:45:22 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - Starting AdminVillageLeaderControllerTest using Java 21.0.1 with PID 66987 (started by user in /Users/user/study/attendly-api)
2025-05-09 23:45:22 [Test worker] [NONE] DEBUG c.a.a.c.AdminVillageLeaderControllerTest - Running with Spring Boot v3.4.5, Spring v6.2.6
2025-05-09 23:45:22 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - The following 1 profile is active: "dev"
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AdminVillageLeaderService name=com.attendly.service.AdminVillageLeaderService#0 bean#1
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for JwtTokenProvider name=com.attendly.security.JwtTokenProvider#0 bean#2
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for UserDetailsService name=org.springframework.security.core.userdetails.UserDetailsService#0 bean#3
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for AuthenticationManager name=authenticationManager bean#4
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	c.a.a.c.AdminVillageLeaderController:
	{POST [/api/admin/village-leader]}: assignVillageLeader(VillageLeaderAssignRequest)
	{GET [/api/admin/village-leader/{villageId}]}: getVillageLeader(long)
	{DELETE [/api/admin/village-leader/{villageId}]}: terminateVillageLeader(long,LocalDate)
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG _.s.w.s.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG com.attendly.config.RequestIdFilter - Filter 'requestIdFilter' configured for use
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG c.a.config.ContentCachingFilter - Filter 'contentCachingFilter' configured for use
2025-05-09 23:45:23 [Test worker] [NONE] DEBUG c.a.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-09 23:45:23 [Test worker] [NONE] INFO  c.a.a.c.AdminVillageLeaderControllerTest - Started AdminVillageLeaderControllerTest in 1.454 seconds (process running for 2.169)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderResponse name=child of com.attendly.service.AdminVillageLeaderService#0 bean#1#5
2025-05-09 23:45:24 [Test worker] [396ad927-e284-4d6c-9663-18bed10b4872] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeaderResponse(userId=1, userName=홍길동, villageId=1, villageName=마을1, startDate=2025-04-09, endDate=2025-05-09, createdAt=2025-05-09T23:45:24.024833, updatedAt=2025-05-09T23:45:24.024837) on AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1).terminateVillageLeader(1, 2025-05-09)
2025-05-09 23:45:24 [Test worker] [396ad927-e284-4d6c-9663-18bed10b4872] INFO  c.a.a.interceptor.ApiLogInterceptor - DELETE /api/admin/village-leader/1 - 200 (47 ms)
2025-05-09 23:45:24 [Test worker] [396ad927-e284-4d6c-9663-18bed10b4872] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"396ad927-e284-4d6c-9663-18bed10b4872","apiPath":"/api/admin/village-leader/1","method":"DELETE","status":200,"duration":47,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"396ad927-e284-4d6c-9663-18bed10b4872","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['endDate']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderResponse name=child of com.attendly.service.AdminVillageLeaderService#0 bean#1#6
2025-05-09 23:45:24 [Test worker] [bd97eb5c-213e-45b1-98b2-ce8dc0fd2b84] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeaderResponse(userId=1, userName=홍길동, villageId=1, villageName=마을1, startDate=2025-05-09, endDate=null, createdAt=2025-05-09T23:45:24.155421, updatedAt=2025-05-09T23:45:24.155425) on AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1).getVillageLeader(1)
2025-05-09 23:45:24 [Test worker] [bd97eb5c-213e-45b1-98b2-ce8dc0fd2b84] INFO  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/village-leader/1 - 200 (2 ms)
2025-05-09 23:45:24 [Test worker] [bd97eb5c-213e-45b1-98b2-ce8dc0fd2b84] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"bd97eb5c-213e-45b1-98b2-ce8dc0fd2b84","apiPath":"/api/admin/village-leader/1","method":"GET","status":200,"duration":2,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"bd97eb5c-213e-45b1-98b2-ce8dc0fd2b84","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userName']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageId']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageName']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderResponse name=child of com.attendly.service.AdminVillageLeaderService#0 bean#1#7
2025-05-09 23:45:24 [Test worker] [1f1fb3f3-bd19-4355-8172-1bf008903846] DEBUG i.m.i.r.states.AnsweringState - Answering null on AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1).getVillageLeader(1)
2025-05-09 23:45:24 [Test worker] [1f1fb3f3-bd19-4355-8172-1bf008903846] WARN  c.a.a.interceptor.ApiLogInterceptor - GET /api/admin/village-leader/1 - 404 (0 ms)
2025-05-09 23:45:24 [Test worker] [1f1fb3f3-bd19-4355-8172-1bf008903846] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"1f1fb3f3-bd19-4355-8172-1bf008903846","apiPath":"/api/admin/village-leader/1","method":"GET","status":404,"duration":0,"requestHeaders":{},"responseHeaders":{"X-Request-ID":"1f1fb3f3-bd19-4355-8172-1bf008903846"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for VillageLeaderResponse name=child of com.attendly.service.AdminVillageLeaderService#0 bean#1#8
2025-05-09 23:45:24 [Test worker] [12e04030-6077-40b9-8299-87c2edd42f97] DEBUG i.m.i.r.states.AnsweringState - Answering VillageLeaderResponse(userId=1, userName=홍길동, villageId=1, villageName=마을1, startDate=2025-05-09, endDate=null, createdAt=2025-05-09T23:45:24.179636, updatedAt=2025-05-09T23:45:24.179638) on AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1).assignVillageLeader(VillageLeaderAssignRequest(userId=1, villageId=1, startDate=2025-05-09, endDate=null))
2025-05-09 23:45:24 [Test worker] [12e04030-6077-40b9-8299-87c2edd42f97] INFO  c.a.a.interceptor.ApiLogInterceptor - POST /api/admin/village-leader - 201 (43 ms)
2025-05-09 23:45:24 [Test worker] [12e04030-6077-40b9-8299-87c2edd42f97] DEBUG c.a.a.interceptor.ApiLogInterceptor - API 상세 정보: {"requestId":"12e04030-6077-40b9-8299-87c2edd42f97","apiPath":"/api/admin/village-leader","method":"POST","status":201,"duration":43,"requestHeaders":{"Content-Type":"application/json;charset=UTF-8","Content-Length":"66"},"responseHeaders":{"X-Request-ID":"12e04030-6077-40b9-8299-87c2edd42f97","Content-Type":"application/json","X-Content-Type-Options":"nosniff","X-XSS-Protection":"0","Cache-Control":"no-cache, no-store, max-age=0, must-revalidate","Pragma":"no-cache","Expires":"0","X-Frame-Options":"DENY"},"requestBody":null,"responseBody":null,"queryParams":null}
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userId']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['userName']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageId']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG c.j.j.internal.path.CompiledPath - Evaluating path: $['villageName']
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AdminVillageLeaderService(com.attendly.service.AdminVillageLeaderService#0 bean#1)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [JwtTokenProvider(com.attendly.security.JwtTokenProvider#0 bean#2)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [UserDetailsService(org.springframework.security.core.userdetails.UserDetailsService#0 bean#3)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2025-05-09 23:45:24 [Test worker] [NONE] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [AuthenticationManager(authenticationManager bean#4)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
